|khu_sensor
KEY[0] => _.IN1
KEY[0] => r_clk_counter[0].ACLR
KEY[0] => r_clk_counter[1].ACLR
KEY[0] => r_clk_counter[2].ACLR
KEY[0] => r_clk_counter[3].ACLR
KEY[0] => r_clk_counter[4].ACLR
KEY[0] => r_clk_counter[5].ACLR
KEY[0] => r_clk_counter[6].ACLR
KEY[0] => r_clk_counter[7].ACLR
KEY[0] => r_clk_counter[8].ACLR
KEY[0] => r_clk_counter[9].ACLR
KEY[0] => r_clk_counter[10].ACLR
KEY[0] => r_clk_counter[11].ACLR
KEY[0] => r_clk_counter[12].ACLR
KEY[0] => r_clk_counter[13].ACLR
KEY[0] => r_clk_counter[14].ACLR
KEY[0] => r_clk_counter[15].ACLR
KEY[0] => r_clk_counter[16].ACLR
KEY[0] => r_clk_counter[17].ACLR
KEY[0] => r_clk_counter[18].ACLR
KEY[0] => r_clk_counter[19].ACLR
KEY[0] => r_clk_counter[20].ACLR
KEY[0] => r_clk_counter[21].ACLR
KEY[0] => r_clk_counter[22].ACLR
KEY[0] => r_clk_counter[23].ACLR
KEY[0] => r_clk_counter[24].ACLR
KEY[0] => r_clk_counter[25].ACLR
KEY[0] => r_clk_counter[26].ACLR
KEY[0] => r_clk_counter[27].ACLR
KEY[0] => r_clk_counter[28].ACLR
KEY[0] => r_clk_counter[29].ACLR
KEY[0] => r_clk_counter[30].ACLR
KEY[0] => r_clk_counter[31].ACLR
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
CLOCK_50 => clk.IN3
LEDR[0] << my_ddio_out:ddio_out_inst2.dataout
LEDR[1] << my_ddio_out:ddio_out_inst.dataout
LEDR[2] << ADS_MISO.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] << MPR121_IRQ.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
LEDR[10] << <GND>
LEDR[11] << <GND>
LEDR[12] << <GND>
LEDR[13] << <GND>
LEDR[14] << <GND>
LEDR[15] << <GND>
LEDR[16] << <GND>
LEDR[17] << <GND>
LEDG[0] << ADS1292_controller:U_ads1292.sys_state
LEDG[1] << ADS1292_controller:U_ads1292.sys_state
LEDG[2] << ADS1292_controller:U_ads1292.sys_state
LEDG[3] << ADS1292_controller:U_ads1292.sys_state
LEDG[4] << ADS1292_controller:U_ads1292.sys_state
LEDG[5] << ADS1292_controller:U_ads1292.sys_state
LEDG[6] << ADS1292_controller:U_ads1292.sys_state
LEDG[7] << ADS1292_controller:U_ads1292.sys_state
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
SW[10] => ~NO_FANOUT~
SW[11] => ~NO_FANOUT~
SW[12] => ~NO_FANOUT~
SW[13] => ~NO_FANOUT~
SW[14] => ~NO_FANOUT~
SW[15] => ~NO_FANOUT~
SW[16] => ~NO_FANOUT~
SW[17] => ~NO_FANOUT~
UART_RXD => UART_RXD.IN1
UART_TXD << uart_regs:Uregs.stx_pad_o
GPIO[0] << ADS1292_controller:U_ads1292.ads_tx_done
GPIO[1] << ADS1292_controller:U_ads1292.ads_rx_done
GPIO[2] << w_ads_rdatac_ready.DB_MAX_OUTPUT_PORT_TYPE
GPIO[3] << <GND>
GPIO[4] << <GND>
GPIO[5] << <GND>
GPIO[6] << <GND>
GPIO[7] << <GND>
GPIO[8] << <GND>
GPIO[9] << <GND>
MPR121_ADDR << <VCC>
MPR121_SDA <> MPR121_controller:u_mpr121.i2c_sda
MPR121_SCL <> MPR121_controller:u_mpr121.i2c_scl
MPR121_IRQ => LEDR[3].DATAIN
ADS_CSN << ADS1292_controller:U_ads1292.ads_csn
ADS_START << ADS1292_controller:U_ads1292.ads_start
ADS_MOSI << ADS1292_controller:U_ads1292.spi_mosi
ADS_SCLK << ADS1292_controller:U_ads1292.spi_clk
ADS_MISO => ADS_MISO.IN1
ADS_DRDY => ADS_DRDY.IN1
ADS_RESET << ADS1292_controller:U_ads1292.ads_reset


|khu_sensor|my_pll:u1
areset => areset.IN1
inclk0 => sub_wire7[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
c2 <= altpll:altpll_component.clk
c3 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|khu_sensor|my_pll:u1|altpll:altpll_component
inclk[0] => my_pll_altpll:auto_generated.inclk[0]
inclk[1] => my_pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => my_pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= my_pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|khu_sensor|my_pll:u1|altpll:altpll_component|my_pll_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|khu_sensor|my_ddio_out:ddio_out_inst2
datain_h[0] => datain_h[0].IN1
datain_h[1] => datain_h[1].IN1
datain_h[2] => datain_h[2].IN1
datain_h[3] => datain_h[3].IN1
datain_h[4] => datain_h[4].IN1
datain_h[5] => datain_h[5].IN1
datain_h[6] => datain_h[6].IN1
datain_h[7] => datain_h[7].IN1
datain_l[0] => datain_l[0].IN1
datain_l[1] => datain_l[1].IN1
datain_l[2] => datain_l[2].IN1
datain_l[3] => datain_l[3].IN1
datain_l[4] => datain_l[4].IN1
datain_l[5] => datain_l[5].IN1
datain_l[6] => datain_l[6].IN1
datain_l[7] => datain_l[7].IN1
outclock => outclock.IN1
dataout[0] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[1] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[2] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[3] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[4] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[5] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[6] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[7] <= altddio_out:ALTDDIO_OUT_component.dataout


|khu_sensor|my_ddio_out:ddio_out_inst2|altddio_out:ALTDDIO_OUT_component
datain_h[0] => ddio_out_0aj:auto_generated.datain_h[0]
datain_h[1] => ddio_out_0aj:auto_generated.datain_h[1]
datain_h[2] => ddio_out_0aj:auto_generated.datain_h[2]
datain_h[3] => ddio_out_0aj:auto_generated.datain_h[3]
datain_h[4] => ddio_out_0aj:auto_generated.datain_h[4]
datain_h[5] => ddio_out_0aj:auto_generated.datain_h[5]
datain_h[6] => ddio_out_0aj:auto_generated.datain_h[6]
datain_h[7] => ddio_out_0aj:auto_generated.datain_h[7]
datain_l[0] => ddio_out_0aj:auto_generated.datain_l[0]
datain_l[1] => ddio_out_0aj:auto_generated.datain_l[1]
datain_l[2] => ddio_out_0aj:auto_generated.datain_l[2]
datain_l[3] => ddio_out_0aj:auto_generated.datain_l[3]
datain_l[4] => ddio_out_0aj:auto_generated.datain_l[4]
datain_l[5] => ddio_out_0aj:auto_generated.datain_l[5]
datain_l[6] => ddio_out_0aj:auto_generated.datain_l[6]
datain_l[7] => ddio_out_0aj:auto_generated.datain_l[7]
outclock => ddio_out_0aj:auto_generated.outclock
outclocken => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
oe => ~NO_FANOUT~
dataout[0] <> ddio_out_0aj:auto_generated.dataout[0]
dataout[1] <> ddio_out_0aj:auto_generated.dataout[1]
dataout[2] <> ddio_out_0aj:auto_generated.dataout[2]
dataout[3] <> ddio_out_0aj:auto_generated.dataout[3]
dataout[4] <> ddio_out_0aj:auto_generated.dataout[4]
dataout[5] <> ddio_out_0aj:auto_generated.dataout[5]
dataout[6] <> ddio_out_0aj:auto_generated.dataout[6]
dataout[7] <> ddio_out_0aj:auto_generated.dataout[7]
oe_out[0] <= <GND>
oe_out[1] <= <GND>
oe_out[2] <= <GND>
oe_out[3] <= <GND>
oe_out[4] <= <GND>
oe_out[5] <= <GND>
oe_out[6] <= <GND>
oe_out[7] <= <GND>


|khu_sensor|my_ddio_out:ddio_out_inst2|altddio_out:ALTDDIO_OUT_component|ddio_out_0aj:auto_generated
datain_h[0] => ddio_outa[0].DATAINHI
datain_h[1] => ddio_outa[1].DATAINHI
datain_h[2] => ddio_outa[2].DATAINHI
datain_h[3] => ddio_outa[3].DATAINHI
datain_h[4] => ddio_outa[4].DATAINHI
datain_h[5] => ddio_outa[5].DATAINHI
datain_h[6] => ddio_outa[6].DATAINHI
datain_h[7] => ddio_outa[7].DATAINHI
datain_l[0] => ddio_outa[0].DATAINLO
datain_l[1] => ddio_outa[1].DATAINLO
datain_l[2] => ddio_outa[2].DATAINLO
datain_l[3] => ddio_outa[3].DATAINLO
datain_l[4] => ddio_outa[4].DATAINLO
datain_l[5] => ddio_outa[5].DATAINLO
datain_l[6] => ddio_outa[6].DATAINLO
datain_l[7] => ddio_outa[7].DATAINLO
dataout[0] <= ddio_outa[0].DATAOUT
dataout[1] <= ddio_outa[1].DATAOUT
dataout[2] <= ddio_outa[2].DATAOUT
dataout[3] <= ddio_outa[3].DATAOUT
dataout[4] <= ddio_outa[4].DATAOUT
dataout[5] <= ddio_outa[5].DATAOUT
dataout[6] <= ddio_outa[6].DATAOUT
dataout[7] <= ddio_outa[7].DATAOUT
outclock => ddio_outa[7].CLKHI
outclock => ddio_outa[7].CLKLO
outclock => ddio_outa[7].MUXSEL
outclock => ddio_outa[6].CLKHI
outclock => ddio_outa[6].CLKLO
outclock => ddio_outa[6].MUXSEL
outclock => ddio_outa[5].CLKHI
outclock => ddio_outa[5].CLKLO
outclock => ddio_outa[5].MUXSEL
outclock => ddio_outa[4].CLKHI
outclock => ddio_outa[4].CLKLO
outclock => ddio_outa[4].MUXSEL
outclock => ddio_outa[3].CLKHI
outclock => ddio_outa[3].CLKLO
outclock => ddio_outa[3].MUXSEL
outclock => ddio_outa[2].CLKHI
outclock => ddio_outa[2].CLKLO
outclock => ddio_outa[2].MUXSEL
outclock => ddio_outa[1].CLKHI
outclock => ddio_outa[1].CLKLO
outclock => ddio_outa[1].MUXSEL
outclock => ddio_outa[0].CLKHI
outclock => ddio_outa[0].CLKLO
outclock => ddio_outa[0].MUXSEL


|khu_sensor|controller:U_controller
Enable => state.DATAB
Enable => Selector125.IN2
CLK => r_ads_sendpc_limit[0].CLK
CLK => r_ads_sendpc_limit[1].CLK
CLK => r_ads_sendpc_limit[2].CLK
CLK => r_ads_sendpc_limit[3].CLK
CLK => r_ads_sendpc_limit[4].CLK
CLK => r_ads_sendpc_limit[5].CLK
CLK => r_ads_sendpc_limit[6].CLK
CLK => r_ads_sendpc_limit[7].CLK
CLK => r_ads_sendpc_counter[0].CLK
CLK => r_ads_sendpc_counter[1].CLK
CLK => r_ads_sendpc_counter[2].CLK
CLK => r_ads_sendpc_counter[3].CLK
CLK => r_ads_sendpc_counter[4].CLK
CLK => r_ads_sendpc_counter[5].CLK
CLK => r_ads_sendpc_counter[6].CLK
CLK => r_ads_sendpc_counter[7].CLK
CLK => r_ads_dout[0].CLK
CLK => r_ads_dout[1].CLK
CLK => r_ads_dout[2].CLK
CLK => r_ads_dout[3].CLK
CLK => r_ads_dout[4].CLK
CLK => r_ads_dout[5].CLK
CLK => r_ads_dout[6].CLK
CLK => r_ads_dout[7].CLK
CLK => r_ads_dout[8].CLK
CLK => r_ads_dout[9].CLK
CLK => r_ads_dout[10].CLK
CLK => r_ads_dout[11].CLK
CLK => r_ads_dout[12].CLK
CLK => r_ads_dout[13].CLK
CLK => r_ads_dout[14].CLK
CLK => r_ads_dout[15].CLK
CLK => r_ads_dout[16].CLK
CLK => r_ads_dout[17].CLK
CLK => r_ads_dout[18].CLK
CLK => r_ads_dout[19].CLK
CLK => r_ads_dout[20].CLK
CLK => r_ads_dout[21].CLK
CLK => r_ads_dout[22].CLK
CLK => r_ads_dout[23].CLK
CLK => r_ads_dout[24].CLK
CLK => r_ads_dout[25].CLK
CLK => r_ads_dout[26].CLK
CLK => r_ads_dout[27].CLK
CLK => r_ads_dout[28].CLK
CLK => r_ads_dout[29].CLK
CLK => r_ads_dout[30].CLK
CLK => r_ads_dout[31].CLK
CLK => r_ads_dout[32].CLK
CLK => r_ads_dout[33].CLK
CLK => r_ads_dout[34].CLK
CLK => r_ads_dout[35].CLK
CLK => r_ads_dout[36].CLK
CLK => r_ads_dout[37].CLK
CLK => r_ads_dout[38].CLK
CLK => r_ads_dout[39].CLK
CLK => r_ads_dout[40].CLK
CLK => r_ads_dout[41].CLK
CLK => r_ads_dout[42].CLK
CLK => r_ads_dout[43].CLK
CLK => r_ads_dout[44].CLK
CLK => r_ads_dout[45].CLK
CLK => r_ads_dout[46].CLK
CLK => r_ads_dout[47].CLK
CLK => r_ads_dout[48].CLK
CLK => r_ads_dout[49].CLK
CLK => r_ads_dout[50].CLK
CLK => r_ads_dout[51].CLK
CLK => r_ads_dout[52].CLK
CLK => r_ads_dout[53].CLK
CLK => r_ads_dout[54].CLK
CLK => r_ads_dout[55].CLK
CLK => r_ads_dout[56].CLK
CLK => r_ads_dout[57].CLK
CLK => r_ads_dout[58].CLK
CLK => r_ads_dout[59].CLK
CLK => r_ads_dout[60].CLK
CLK => r_ads_dout[61].CLK
CLK => r_ads_dout[62].CLK
CLK => r_ads_dout[63].CLK
CLK => r_ads_dout[64].CLK
CLK => r_ads_dout[65].CLK
CLK => r_ads_dout[66].CLK
CLK => r_ads_dout[67].CLK
CLK => r_ads_dout[68].CLK
CLK => r_ads_dout[69].CLK
CLK => r_ads_dout[70].CLK
CLK => r_ads_dout[71].CLK
CLK => r_ads_din2[0].CLK
CLK => r_ads_din2[1].CLK
CLK => r_ads_din2[2].CLK
CLK => r_ads_din2[3].CLK
CLK => r_ads_din2[4].CLK
CLK => r_ads_din2[5].CLK
CLK => r_ads_din2[6].CLK
CLK => r_ads_din2[7].CLK
CLK => r_ads_din1[0].CLK
CLK => r_ads_din1[1].CLK
CLK => r_ads_din1[2].CLK
CLK => r_ads_din1[3].CLK
CLK => r_ads_din1[4].CLK
CLK => r_ads_din1[5].CLK
CLK => r_ads_din1[6].CLK
CLK => r_ads_din1[7].CLK
CLK => r_ads_cmd_reg.CLK
CLK => r_ads_cmd_data_read.CLK
CLK => r_ads_cmd_sys.CLK
CLK => r_mpr_listening.CLK
CLK => r_mpr_ren.CLK
CLK => r_mpr_wen.CLK
CLK => r_mpr_d_from_chip[0].CLK
CLK => r_mpr_d_from_chip[1].CLK
CLK => r_mpr_d_from_chip[2].CLK
CLK => r_mpr_d_from_chip[3].CLK
CLK => r_mpr_d_from_chip[4].CLK
CLK => r_mpr_d_from_chip[5].CLK
CLK => r_mpr_d_from_chip[6].CLK
CLK => r_mpr_d_from_chip[7].CLK
CLK => r_mpr_d_to_chip[0].CLK
CLK => r_mpr_d_to_chip[1].CLK
CLK => r_mpr_d_to_chip[2].CLK
CLK => r_mpr_d_to_chip[3].CLK
CLK => r_mpr_d_to_chip[4].CLK
CLK => r_mpr_d_to_chip[5].CLK
CLK => r_mpr_d_to_chip[6].CLK
CLK => r_mpr_d_to_chip[7].CLK
CLK => r_mpr_reg_addr[0].CLK
CLK => r_mpr_reg_addr[1].CLK
CLK => r_mpr_reg_addr[2].CLK
CLK => r_mpr_reg_addr[3].CLK
CLK => r_mpr_reg_addr[4].CLK
CLK => r_mpr_reg_addr[5].CLK
CLK => r_mpr_reg_addr[6].CLK
CLK => r_mpr_reg_addr[7].CLK
CLK => r_second_para[0].CLK
CLK => r_second_para[1].CLK
CLK => r_second_para[2].CLK
CLK => r_second_para[3].CLK
CLK => r_second_para[4].CLK
CLK => r_second_para[5].CLK
CLK => r_second_para[6].CLK
CLK => r_second_para[7].CLK
CLK => r_firt_para[0].CLK
CLK => r_firt_para[1].CLK
CLK => r_firt_para[2].CLK
CLK => r_firt_para[3].CLK
CLK => r_firt_para[4].CLK
CLK => r_firt_para[5].CLK
CLK => r_firt_para[6].CLK
CLK => r_firt_para[7].CLK
CLK => r_counter2[0].CLK
CLK => r_counter2[1].CLK
CLK => r_counter2[2].CLK
CLK => r_counter2[3].CLK
CLK => r_counter2[4].CLK
CLK => r_counter2[5].CLK
CLK => r_counter2[6].CLK
CLK => r_counter2[7].CLK
CLK => r_counter2[8].CLK
CLK => r_counter2[9].CLK
CLK => r_counter2[10].CLK
CLK => r_counter2[11].CLK
CLK => r_counter2[12].CLK
CLK => r_counter2[13].CLK
CLK => r_counter2[14].CLK
CLK => r_counter2[15].CLK
CLK => r_counter2[16].CLK
CLK => r_counter2[17].CLK
CLK => r_counter2[18].CLK
CLK => r_counter2[19].CLK
CLK => r_counter2[20].CLK
CLK => r_counter2[21].CLK
CLK => r_counter2[22].CLK
CLK => r_counter2[23].CLK
CLK => r_counter2[24].CLK
CLK => r_counter2[25].CLK
CLK => r_counter2[26].CLK
CLK => r_counter2[27].CLK
CLK => r_counter2[28].CLK
CLK => r_counter2[29].CLK
CLK => r_counter2[30].CLK
CLK => r_counter2[31].CLK
CLK => r_counter[0].CLK
CLK => r_counter[1].CLK
CLK => r_counter[2].CLK
CLK => r_counter[3].CLK
CLK => r_counter[4].CLK
CLK => r_counter[5].CLK
CLK => r_counter[6].CLK
CLK => r_counter[7].CLK
CLK => r_counter[8].CLK
CLK => r_counter[9].CLK
CLK => r_counter[10].CLK
CLK => r_counter[11].CLK
CLK => r_counter[12].CLK
CLK => r_counter[13].CLK
CLK => r_counter[14].CLK
CLK => r_counter[15].CLK
CLK => r_counter[16].CLK
CLK => r_counter[17].CLK
CLK => r_counter[18].CLK
CLK => r_counter[19].CLK
CLK => r_counter[20].CLK
CLK => r_counter[21].CLK
CLK => r_counter[22].CLK
CLK => r_counter[23].CLK
CLK => r_counter[24].CLK
CLK => r_counter[25].CLK
CLK => r_counter[26].CLK
CLK => r_counter[27].CLK
CLK => r_counter[28].CLK
CLK => r_counter[29].CLK
CLK => r_counter[30].CLK
CLK => r_counter[31].CLK
CLK => uart_re_o~reg0.CLK
CLK => uart_we_o~reg0.CLK
CLK => uart_wdata_o[0]~reg0.CLK
CLK => uart_wdata_o[1]~reg0.CLK
CLK => uart_wdata_o[2]~reg0.CLK
CLK => uart_wdata_o[3]~reg0.CLK
CLK => uart_wdata_o[4]~reg0.CLK
CLK => uart_wdata_o[5]~reg0.CLK
CLK => uart_wdata_o[6]~reg0.CLK
CLK => uart_wdata_o[7]~reg0.CLK
CLK => uart_addr_o[0]~reg0.CLK
CLK => uart_addr_o[1]~reg0.CLK
CLK => uart_addr_o[2]~reg0.CLK
CLK => r_mpr_irq_delay[0].CLK
CLK => r_mpr_irq_delay[1].CLK
CLK => r_mpr_irq_delay[2].CLK
CLK => r_mpr_irq_delay[3].CLK
CLK => r_mpr_irq_delay[4].CLK
CLK => r_mpr_irq_delay[5].CLK
CLK => r_mpr_irq_delay[6].CLK
CLK => r_mpr_irq_delay[7].CLK
CLK => r_mpr_irq_delay[8].CLK
CLK => r_mpr_irq_delay[9].CLK
CLK => r_mpr_irq_delay[10].CLK
CLK => r_mpr_irq_delay[11].CLK
CLK => r_mpr_irq_delay[12].CLK
CLK => r_mpr_irq_delay[13].CLK
CLK => r_mpr_irq_delay[14].CLK
CLK => r_mpr_irq_delay[15].CLK
CLK => r_mpr_irq_delay[16].CLK
CLK => r_mpr_irq_delay[17].CLK
CLK => r_mpr_irq_delay[18].CLK
CLK => r_mpr_irq_delay[19].CLK
CLK => r_mpr_irq_delay[20].CLK
CLK => r_mpr_irq_delay[21].CLK
CLK => r_mpr_irq_delay[22].CLK
CLK => r_mpr_irq_delay[23].CLK
CLK => r_mpr_irq_delay[24].CLK
CLK => r_mpr_irq_delay[25].CLK
CLK => r_mpr_irq_delay[26].CLK
CLK => r_mpr_irq_delay[27].CLK
CLK => r_mpr_irq_delay[28].CLK
CLK => r_mpr_irq_delay[29].CLK
CLK => r_mpr_irq_delay[30].CLK
CLK => r_mpr_irq_delay[31].CLK
CLK => r_MPR_irq.CLK
CLK => r_ads_drdy_readed.CLK
CLK => pre_state2~11.DATAIN
CLK => pre_state1~4.DATAIN
CLK => state~1.DATAIN
RESET => r_ads_sendpc_limit[0].ACLR
RESET => r_ads_sendpc_limit[1].ACLR
RESET => r_ads_sendpc_limit[2].ACLR
RESET => r_ads_sendpc_limit[3].ACLR
RESET => r_ads_sendpc_limit[4].ACLR
RESET => r_ads_sendpc_limit[5].ACLR
RESET => r_ads_sendpc_limit[6].ACLR
RESET => r_ads_sendpc_limit[7].ACLR
RESET => r_ads_sendpc_counter[0].ACLR
RESET => r_ads_sendpc_counter[1].ACLR
RESET => r_ads_sendpc_counter[2].ACLR
RESET => r_ads_sendpc_counter[3].ACLR
RESET => r_ads_sendpc_counter[4].ACLR
RESET => r_ads_sendpc_counter[5].ACLR
RESET => r_ads_sendpc_counter[6].ACLR
RESET => r_ads_sendpc_counter[7].ACLR
RESET => r_ads_dout[0].ACLR
RESET => r_ads_dout[1].ACLR
RESET => r_ads_dout[2].ACLR
RESET => r_ads_dout[3].ACLR
RESET => r_ads_dout[4].ACLR
RESET => r_ads_dout[5].ACLR
RESET => r_ads_dout[6].ACLR
RESET => r_ads_dout[7].ACLR
RESET => r_ads_dout[8].ACLR
RESET => r_ads_dout[9].ACLR
RESET => r_ads_dout[10].ACLR
RESET => r_ads_dout[11].ACLR
RESET => r_ads_dout[12].ACLR
RESET => r_ads_dout[13].ACLR
RESET => r_ads_dout[14].ACLR
RESET => r_ads_dout[15].ACLR
RESET => r_ads_dout[16].ACLR
RESET => r_ads_dout[17].ACLR
RESET => r_ads_dout[18].ACLR
RESET => r_ads_dout[19].ACLR
RESET => r_ads_dout[20].ACLR
RESET => r_ads_dout[21].ACLR
RESET => r_ads_dout[22].ACLR
RESET => r_ads_dout[23].ACLR
RESET => r_ads_dout[24].ACLR
RESET => r_ads_dout[25].ACLR
RESET => r_ads_dout[26].ACLR
RESET => r_ads_dout[27].ACLR
RESET => r_ads_dout[28].ACLR
RESET => r_ads_dout[29].ACLR
RESET => r_ads_dout[30].ACLR
RESET => r_ads_dout[31].ACLR
RESET => r_ads_dout[32].ACLR
RESET => r_ads_dout[33].ACLR
RESET => r_ads_dout[34].ACLR
RESET => r_ads_dout[35].ACLR
RESET => r_ads_dout[36].ACLR
RESET => r_ads_dout[37].ACLR
RESET => r_ads_dout[38].ACLR
RESET => r_ads_dout[39].ACLR
RESET => r_ads_dout[40].ACLR
RESET => r_ads_dout[41].ACLR
RESET => r_ads_dout[42].ACLR
RESET => r_ads_dout[43].ACLR
RESET => r_ads_dout[44].ACLR
RESET => r_ads_dout[45].ACLR
RESET => r_ads_dout[46].ACLR
RESET => r_ads_dout[47].ACLR
RESET => r_ads_dout[48].ACLR
RESET => r_ads_dout[49].ACLR
RESET => r_ads_dout[50].ACLR
RESET => r_ads_dout[51].ACLR
RESET => r_ads_dout[52].ACLR
RESET => r_ads_dout[53].ACLR
RESET => r_ads_dout[54].ACLR
RESET => r_ads_dout[55].ACLR
RESET => r_ads_dout[56].ACLR
RESET => r_ads_dout[57].ACLR
RESET => r_ads_dout[58].ACLR
RESET => r_ads_dout[59].ACLR
RESET => r_ads_dout[60].ACLR
RESET => r_ads_dout[61].ACLR
RESET => r_ads_dout[62].ACLR
RESET => r_ads_dout[63].ACLR
RESET => r_ads_dout[64].ACLR
RESET => r_ads_dout[65].ACLR
RESET => r_ads_dout[66].ACLR
RESET => r_ads_dout[67].ACLR
RESET => r_ads_dout[68].ACLR
RESET => r_ads_dout[69].ACLR
RESET => r_ads_dout[70].ACLR
RESET => r_ads_dout[71].ACLR
RESET => r_ads_din2[0].ACLR
RESET => r_ads_din2[1].ACLR
RESET => r_ads_din2[2].ACLR
RESET => r_ads_din2[3].ACLR
RESET => r_ads_din2[4].ACLR
RESET => r_ads_din2[5].ACLR
RESET => r_ads_din2[6].ACLR
RESET => r_ads_din2[7].ACLR
RESET => r_ads_din1[0].ACLR
RESET => r_ads_din1[1].ACLR
RESET => r_ads_din1[2].ACLR
RESET => r_ads_din1[3].ACLR
RESET => r_ads_din1[4].ACLR
RESET => r_ads_din1[5].ACLR
RESET => r_ads_din1[6].ACLR
RESET => r_ads_din1[7].ACLR
RESET => r_ads_cmd_reg.ACLR
RESET => r_ads_cmd_data_read.ACLR
RESET => r_ads_cmd_sys.ACLR
RESET => r_mpr_listening.ACLR
RESET => r_mpr_ren.ACLR
RESET => r_mpr_wen.ACLR
RESET => r_mpr_d_from_chip[0].ACLR
RESET => r_mpr_d_from_chip[1].ACLR
RESET => r_mpr_d_from_chip[2].ACLR
RESET => r_mpr_d_from_chip[3].ACLR
RESET => r_mpr_d_from_chip[4].ACLR
RESET => r_mpr_d_from_chip[5].ACLR
RESET => r_mpr_d_from_chip[6].ACLR
RESET => r_mpr_d_from_chip[7].ACLR
RESET => r_mpr_d_to_chip[0].ACLR
RESET => r_mpr_d_to_chip[1].ACLR
RESET => r_mpr_d_to_chip[2].ACLR
RESET => r_mpr_d_to_chip[3].ACLR
RESET => r_mpr_d_to_chip[4].ACLR
RESET => r_mpr_d_to_chip[5].ACLR
RESET => r_mpr_d_to_chip[6].ACLR
RESET => r_mpr_d_to_chip[7].ACLR
RESET => r_mpr_reg_addr[0].ACLR
RESET => r_mpr_reg_addr[1].ACLR
RESET => r_mpr_reg_addr[2].ACLR
RESET => r_mpr_reg_addr[3].ACLR
RESET => r_mpr_reg_addr[4].ACLR
RESET => r_mpr_reg_addr[5].ACLR
RESET => r_mpr_reg_addr[6].ACLR
RESET => r_mpr_reg_addr[7].ACLR
RESET => r_second_para[0].ACLR
RESET => r_second_para[1].ACLR
RESET => r_second_para[2].ACLR
RESET => r_second_para[3].ACLR
RESET => r_second_para[4].ACLR
RESET => r_second_para[5].ACLR
RESET => r_second_para[6].ACLR
RESET => r_second_para[7].ACLR
RESET => r_firt_para[0].ACLR
RESET => r_firt_para[1].ACLR
RESET => r_firt_para[2].ACLR
RESET => r_firt_para[3].ACLR
RESET => r_firt_para[4].ACLR
RESET => r_firt_para[5].ACLR
RESET => r_firt_para[6].ACLR
RESET => r_firt_para[7].ACLR
RESET => r_counter2[0].ACLR
RESET => r_counter2[1].ACLR
RESET => r_counter2[2].ACLR
RESET => r_counter2[3].ACLR
RESET => r_counter2[4].ACLR
RESET => r_counter2[5].ACLR
RESET => r_counter2[6].ACLR
RESET => r_counter2[7].ACLR
RESET => r_counter2[8].ACLR
RESET => r_counter2[9].ACLR
RESET => r_counter2[10].ACLR
RESET => r_counter2[11].ACLR
RESET => r_counter2[12].ACLR
RESET => r_counter2[13].ACLR
RESET => r_counter2[14].ACLR
RESET => r_counter2[15].ACLR
RESET => r_counter2[16].ACLR
RESET => r_counter2[17].ACLR
RESET => r_counter2[18].ACLR
RESET => r_counter2[19].ACLR
RESET => r_counter2[20].ACLR
RESET => r_counter2[21].ACLR
RESET => r_counter2[22].ACLR
RESET => r_counter2[23].ACLR
RESET => r_counter2[24].ACLR
RESET => r_counter2[25].ACLR
RESET => r_counter2[26].ACLR
RESET => r_counter2[27].ACLR
RESET => r_counter2[28].ACLR
RESET => r_counter2[29].ACLR
RESET => r_counter2[30].ACLR
RESET => r_counter2[31].ACLR
RESET => r_counter[0].ACLR
RESET => r_counter[1].ACLR
RESET => r_counter[2].ACLR
RESET => r_counter[3].ACLR
RESET => r_counter[4].ACLR
RESET => r_counter[5].ACLR
RESET => r_counter[6].ACLR
RESET => r_counter[7].ACLR
RESET => r_counter[8].ACLR
RESET => r_counter[9].ACLR
RESET => r_counter[10].ACLR
RESET => r_counter[11].ACLR
RESET => r_counter[12].ACLR
RESET => r_counter[13].ACLR
RESET => r_counter[14].ACLR
RESET => r_counter[15].ACLR
RESET => r_counter[16].ACLR
RESET => r_counter[17].ACLR
RESET => r_counter[18].ACLR
RESET => r_counter[19].ACLR
RESET => r_counter[20].ACLR
RESET => r_counter[21].ACLR
RESET => r_counter[22].ACLR
RESET => r_counter[23].ACLR
RESET => r_counter[24].ACLR
RESET => r_counter[25].ACLR
RESET => r_counter[26].ACLR
RESET => r_counter[27].ACLR
RESET => r_counter[28].ACLR
RESET => r_counter[29].ACLR
RESET => r_counter[30].ACLR
RESET => r_counter[31].ACLR
RESET => uart_re_o~reg0.ACLR
RESET => uart_we_o~reg0.ACLR
RESET => uart_wdata_o[0]~reg0.ACLR
RESET => uart_wdata_o[1]~reg0.ACLR
RESET => uart_wdata_o[2]~reg0.ACLR
RESET => uart_wdata_o[3]~reg0.ACLR
RESET => uart_wdata_o[4]~reg0.ACLR
RESET => uart_wdata_o[5]~reg0.ACLR
RESET => uart_wdata_o[6]~reg0.ACLR
RESET => uart_wdata_o[7]~reg0.ACLR
RESET => uart_addr_o[0]~reg0.ACLR
RESET => uart_addr_o[1]~reg0.ACLR
RESET => uart_addr_o[2]~reg0.ACLR
RESET => r_mpr_irq_delay[0].ACLR
RESET => r_mpr_irq_delay[1].ACLR
RESET => r_mpr_irq_delay[2].ACLR
RESET => r_mpr_irq_delay[3].ACLR
RESET => r_mpr_irq_delay[4].ACLR
RESET => r_mpr_irq_delay[5].ACLR
RESET => r_mpr_irq_delay[6].ACLR
RESET => r_mpr_irq_delay[7].ACLR
RESET => r_mpr_irq_delay[8].ACLR
RESET => r_mpr_irq_delay[9].ACLR
RESET => r_mpr_irq_delay[10].ACLR
RESET => r_mpr_irq_delay[11].ACLR
RESET => r_mpr_irq_delay[12].ACLR
RESET => r_mpr_irq_delay[13].ACLR
RESET => r_mpr_irq_delay[14].ACLR
RESET => r_mpr_irq_delay[15].ACLR
RESET => r_mpr_irq_delay[16].ACLR
RESET => r_mpr_irq_delay[17].ACLR
RESET => r_mpr_irq_delay[18].ACLR
RESET => r_mpr_irq_delay[19].ACLR
RESET => r_mpr_irq_delay[20].ACLR
RESET => r_mpr_irq_delay[21].ACLR
RESET => r_mpr_irq_delay[22].ACLR
RESET => r_mpr_irq_delay[23].ACLR
RESET => r_mpr_irq_delay[24].ACLR
RESET => r_mpr_irq_delay[25].ACLR
RESET => r_mpr_irq_delay[26].ACLR
RESET => r_mpr_irq_delay[27].ACLR
RESET => r_mpr_irq_delay[28].ACLR
RESET => r_mpr_irq_delay[29].ACLR
RESET => r_mpr_irq_delay[30].ACLR
RESET => r_mpr_irq_delay[31].ACLR
RESET => r_MPR_irq.ACLR
RESET => r_ads_drdy_readed.ACLR
RESET => pre_state2~13.DATAIN
RESET => pre_state1~6.DATAIN
RESET => state~3.DATAIN
LED[0] <= <GND>
LED[1] <= <GND>
LED[2] <= <GND>
LED[3] <= <GND>
LED[4] <= <GND>
uart_addr_o[0] <= uart_addr_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_addr_o[1] <= uart_addr_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_addr_o[2] <= uart_addr_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[0] <= uart_wdata_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[1] <= uart_wdata_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[2] <= uart_wdata_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[3] <= uart_wdata_o[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[4] <= uart_wdata_o[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[5] <= uart_wdata_o[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[6] <= uart_wdata_o[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[7] <= uart_wdata_o[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rdata_i[0] => uart_addr_o.OUTPUTSELECT
uart_rdata_i[0] => uart_addr_o.OUTPUTSELECT
uart_rdata_i[0] => uart_addr_o.OUTPUTSELECT
uart_rdata_i[0] => uart_we_o.OUTPUTSELECT
uart_rdata_i[0] => uart_re_o.OUTPUTSELECT
uart_rdata_i[0] => state.OUTPUTSELECT
uart_rdata_i[0] => state.OUTPUTSELECT
uart_rdata_i[0] => state.OUTPUTSELECT
uart_rdata_i[0] => pre_state2.OUTPUTSELECT
uart_rdata_i[0] => pre_state2.OUTPUTSELECT
uart_rdata_i[0] => pre_state2.OUTPUTSELECT
uart_rdata_i[0] => pre_state2.OUTPUTSELECT
uart_rdata_i[0] => pre_state2.OUTPUTSELECT
uart_rdata_i[0] => pre_state2.OUTPUTSELECT
uart_rdata_i[0] => pre_state2.OUTPUTSELECT
uart_rdata_i[0] => pre_state2.OUTPUTSELECT
uart_rdata_i[0] => pre_state2.OUTPUTSELECT
uart_rdata_i[0] => pre_state2.OUTPUTSELECT
uart_rdata_i[0] => r_firt_para.OUTPUTSELECT
uart_rdata_i[0] => r_firt_para.OUTPUTSELECT
uart_rdata_i[0] => r_firt_para.OUTPUTSELECT
uart_rdata_i[0] => r_firt_para.OUTPUTSELECT
uart_rdata_i[0] => r_firt_para.OUTPUTSELECT
uart_rdata_i[0] => r_firt_para.OUTPUTSELECT
uart_rdata_i[0] => r_firt_para.OUTPUTSELECT
uart_rdata_i[0] => r_firt_para.OUTPUTSELECT
uart_rdata_i[0] => Decoder0.IN7
uart_rdata_i[0] => r_second_para.DATAB
uart_rdata_i[0] => r_firt_para.DATAB
uart_rdata_i[0] => state.DATAB
uart_rdata_i[1] => Decoder0.IN6
uart_rdata_i[1] => r_second_para.DATAB
uart_rdata_i[1] => r_firt_para.DATAB
uart_rdata_i[2] => Decoder0.IN5
uart_rdata_i[2] => r_second_para.DATAB
uart_rdata_i[2] => r_firt_para.DATAB
uart_rdata_i[3] => Decoder0.IN4
uart_rdata_i[3] => r_second_para.DATAB
uart_rdata_i[3] => r_firt_para.DATAB
uart_rdata_i[4] => Decoder0.IN3
uart_rdata_i[4] => r_second_para.DATAB
uart_rdata_i[4] => r_firt_para.DATAB
uart_rdata_i[5] => Decoder0.IN2
uart_rdata_i[5] => r_second_para.DATAB
uart_rdata_i[5] => r_firt_para.DATAB
uart_rdata_i[6] => Decoder0.IN1
uart_rdata_i[6] => r_second_para.DATAB
uart_rdata_i[6] => r_firt_para.DATAB
uart_rdata_i[7] => Decoder0.IN0
uart_rdata_i[7] => r_second_para.DATAB
uart_rdata_i[7] => r_firt_para.DATAB
uart_we_o <= uart_we_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_re_o <= uart_re_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
MPR_rst <= <GND>
MPR_wen <= r_mpr_wen.DB_MAX_OUTPUT_PORT_TYPE
MPR_ren <= r_mpr_ren.DB_MAX_OUTPUT_PORT_TYPE
MPR_busy => state.OUTPUTSELECT
MPR_busy => r_mpr_d_from_chip.OUTPUTSELECT
MPR_busy => r_mpr_d_from_chip.OUTPUTSELECT
MPR_busy => r_mpr_d_from_chip.OUTPUTSELECT
MPR_busy => r_mpr_d_from_chip.OUTPUTSELECT
MPR_busy => r_mpr_d_from_chip.OUTPUTSELECT
MPR_busy => r_mpr_d_from_chip.OUTPUTSELECT
MPR_busy => r_mpr_d_from_chip.OUTPUTSELECT
MPR_busy => r_mpr_d_from_chip.OUTPUTSELECT
MPR_busy => state.OUTPUTSELECT
MPR_busy => Selector130.IN3
MPR_busy => Selector131.IN3
MPR_fail => r_mpr_d_from_chip.OUTPUTSELECT
MPR_fail => r_mpr_d_from_chip.OUTPUTSELECT
MPR_fail => r_mpr_d_from_chip.OUTPUTSELECT
MPR_fail => r_mpr_d_from_chip.OUTPUTSELECT
MPR_fail => r_mpr_d_from_chip.OUTPUTSELECT
MPR_fail => r_mpr_d_from_chip.OUTPUTSELECT
MPR_fail => r_mpr_d_from_chip.OUTPUTSELECT
MPR_fail => r_mpr_d_from_chip.OUTPUTSELECT
MPR_fail => state.DATAA
MPR_fail => state.DATAA
MPR_irq => always1.IN1
MPR_reg_addr[0] <= r_mpr_reg_addr[0].DB_MAX_OUTPUT_PORT_TYPE
MPR_reg_addr[1] <= r_mpr_reg_addr[1].DB_MAX_OUTPUT_PORT_TYPE
MPR_reg_addr[2] <= r_mpr_reg_addr[2].DB_MAX_OUTPUT_PORT_TYPE
MPR_reg_addr[3] <= r_mpr_reg_addr[3].DB_MAX_OUTPUT_PORT_TYPE
MPR_reg_addr[4] <= r_mpr_reg_addr[4].DB_MAX_OUTPUT_PORT_TYPE
MPR_reg_addr[5] <= r_mpr_reg_addr[5].DB_MAX_OUTPUT_PORT_TYPE
MPR_reg_addr[6] <= r_mpr_reg_addr[6].DB_MAX_OUTPUT_PORT_TYPE
MPR_reg_addr[7] <= r_mpr_reg_addr[7].DB_MAX_OUTPUT_PORT_TYPE
MPR_d_from_chip[0] => r_mpr_d_from_chip.DATAA
MPR_d_from_chip[1] => r_mpr_d_from_chip.DATAA
MPR_d_from_chip[2] => r_mpr_d_from_chip.DATAA
MPR_d_from_chip[3] => r_mpr_d_from_chip.DATAA
MPR_d_from_chip[4] => r_mpr_d_from_chip.DATAA
MPR_d_from_chip[5] => r_mpr_d_from_chip.DATAA
MPR_d_from_chip[6] => r_mpr_d_from_chip.DATAA
MPR_d_from_chip[7] => r_mpr_d_from_chip.DATAA
MPR_d_to_chip[0] <= r_mpr_d_to_chip[0].DB_MAX_OUTPUT_PORT_TYPE
MPR_d_to_chip[1] <= r_mpr_d_to_chip[1].DB_MAX_OUTPUT_PORT_TYPE
MPR_d_to_chip[2] <= r_mpr_d_to_chip[2].DB_MAX_OUTPUT_PORT_TYPE
MPR_d_to_chip[3] <= r_mpr_d_to_chip[3].DB_MAX_OUTPUT_PORT_TYPE
MPR_d_to_chip[4] <= r_mpr_d_to_chip[4].DB_MAX_OUTPUT_PORT_TYPE
MPR_d_to_chip[5] <= r_mpr_d_to_chip[5].DB_MAX_OUTPUT_PORT_TYPE
MPR_d_to_chip[6] <= r_mpr_d_to_chip[6].DB_MAX_OUTPUT_PORT_TYPE
MPR_d_to_chip[7] <= r_mpr_d_to_chip[7].DB_MAX_OUTPUT_PORT_TYPE
ADS_cmd_sys <= r_ads_cmd_sys.DB_MAX_OUTPUT_PORT_TYPE
ADS_cmd_data_read <= r_ads_cmd_data_read.DB_MAX_OUTPUT_PORT_TYPE
ADS_cmd_reg <= r_ads_cmd_reg.DB_MAX_OUTPUT_PORT_TYPE
ADS_din1[0] <= r_ads_din1[0].DB_MAX_OUTPUT_PORT_TYPE
ADS_din1[1] <= r_ads_din1[1].DB_MAX_OUTPUT_PORT_TYPE
ADS_din1[2] <= r_ads_din1[2].DB_MAX_OUTPUT_PORT_TYPE
ADS_din1[3] <= r_ads_din1[3].DB_MAX_OUTPUT_PORT_TYPE
ADS_din1[4] <= r_ads_din1[4].DB_MAX_OUTPUT_PORT_TYPE
ADS_din1[5] <= r_ads_din1[5].DB_MAX_OUTPUT_PORT_TYPE
ADS_din1[6] <= r_ads_din1[6].DB_MAX_OUTPUT_PORT_TYPE
ADS_din1[7] <= r_ads_din1[7].DB_MAX_OUTPUT_PORT_TYPE
ADS_din2[0] <= r_ads_din2[0].DB_MAX_OUTPUT_PORT_TYPE
ADS_din2[1] <= r_ads_din2[1].DB_MAX_OUTPUT_PORT_TYPE
ADS_din2[2] <= r_ads_din2[2].DB_MAX_OUTPUT_PORT_TYPE
ADS_din2[3] <= r_ads_din2[3].DB_MAX_OUTPUT_PORT_TYPE
ADS_din2[4] <= r_ads_din2[4].DB_MAX_OUTPUT_PORT_TYPE
ADS_din2[5] <= r_ads_din2[5].DB_MAX_OUTPUT_PORT_TYPE
ADS_din2[6] <= r_ads_din2[6].DB_MAX_OUTPUT_PORT_TYPE
ADS_din2[7] <= r_ads_din2[7].DB_MAX_OUTPUT_PORT_TYPE
ADS_dout[0] => r_ads_dout.DATAB
ADS_dout[0] => r_ads_dout.DATAB
ADS_dout[0] => r_ads_dout.DATAB
ADS_dout[1] => r_ads_dout.DATAB
ADS_dout[1] => r_ads_dout.DATAB
ADS_dout[1] => r_ads_dout.DATAB
ADS_dout[2] => r_ads_dout.DATAB
ADS_dout[2] => r_ads_dout.DATAB
ADS_dout[2] => r_ads_dout.DATAB
ADS_dout[3] => r_ads_dout.DATAB
ADS_dout[3] => r_ads_dout.DATAB
ADS_dout[3] => r_ads_dout.DATAB
ADS_dout[4] => r_ads_dout.DATAB
ADS_dout[4] => r_ads_dout.DATAB
ADS_dout[4] => r_ads_dout.DATAB
ADS_dout[5] => r_ads_dout.DATAB
ADS_dout[5] => r_ads_dout.DATAB
ADS_dout[5] => r_ads_dout.DATAB
ADS_dout[6] => r_ads_dout.DATAB
ADS_dout[6] => r_ads_dout.DATAB
ADS_dout[6] => r_ads_dout.DATAB
ADS_dout[7] => r_ads_dout.DATAB
ADS_dout[7] => r_ads_dout.DATAB
ADS_dout[7] => r_ads_dout.DATAB
ADS_dout[8] => r_ads_dout.DATAB
ADS_dout[8] => r_ads_dout.DATAB
ADS_dout[8] => r_ads_dout.DATAB
ADS_dout[9] => r_ads_dout.DATAB
ADS_dout[9] => r_ads_dout.DATAB
ADS_dout[9] => r_ads_dout.DATAB
ADS_dout[10] => r_ads_dout.DATAB
ADS_dout[10] => r_ads_dout.DATAB
ADS_dout[10] => r_ads_dout.DATAB
ADS_dout[11] => r_ads_dout.DATAB
ADS_dout[11] => r_ads_dout.DATAB
ADS_dout[11] => r_ads_dout.DATAB
ADS_dout[12] => r_ads_dout.DATAB
ADS_dout[12] => r_ads_dout.DATAB
ADS_dout[12] => r_ads_dout.DATAB
ADS_dout[13] => r_ads_dout.DATAB
ADS_dout[13] => r_ads_dout.DATAB
ADS_dout[13] => r_ads_dout.DATAB
ADS_dout[14] => r_ads_dout.DATAB
ADS_dout[14] => r_ads_dout.DATAB
ADS_dout[14] => r_ads_dout.DATAB
ADS_dout[15] => r_ads_dout.DATAB
ADS_dout[15] => r_ads_dout.DATAB
ADS_dout[15] => r_ads_dout.DATAB
ADS_dout[16] => r_ads_dout.DATAB
ADS_dout[16] => r_ads_dout.DATAB
ADS_dout[16] => r_ads_dout.DATAB
ADS_dout[17] => r_ads_dout.DATAB
ADS_dout[17] => r_ads_dout.DATAB
ADS_dout[17] => r_ads_dout.DATAB
ADS_dout[18] => r_ads_dout.DATAB
ADS_dout[18] => r_ads_dout.DATAB
ADS_dout[18] => r_ads_dout.DATAB
ADS_dout[19] => r_ads_dout.DATAB
ADS_dout[19] => r_ads_dout.DATAB
ADS_dout[19] => r_ads_dout.DATAB
ADS_dout[20] => r_ads_dout.DATAB
ADS_dout[20] => r_ads_dout.DATAB
ADS_dout[20] => r_ads_dout.DATAB
ADS_dout[21] => r_ads_dout.DATAB
ADS_dout[21] => r_ads_dout.DATAB
ADS_dout[21] => r_ads_dout.DATAB
ADS_dout[22] => r_ads_dout.DATAB
ADS_dout[22] => r_ads_dout.DATAB
ADS_dout[22] => r_ads_dout.DATAB
ADS_dout[23] => r_ads_dout.DATAB
ADS_dout[23] => r_ads_dout.DATAB
ADS_dout[23] => r_ads_dout.DATAB
ADS_dout[24] => r_ads_dout.DATAB
ADS_dout[24] => r_ads_dout.DATAB
ADS_dout[24] => r_ads_dout.DATAB
ADS_dout[25] => r_ads_dout.DATAB
ADS_dout[25] => r_ads_dout.DATAB
ADS_dout[25] => r_ads_dout.DATAB
ADS_dout[26] => r_ads_dout.DATAB
ADS_dout[26] => r_ads_dout.DATAB
ADS_dout[26] => r_ads_dout.DATAB
ADS_dout[27] => r_ads_dout.DATAB
ADS_dout[27] => r_ads_dout.DATAB
ADS_dout[27] => r_ads_dout.DATAB
ADS_dout[28] => r_ads_dout.DATAB
ADS_dout[28] => r_ads_dout.DATAB
ADS_dout[28] => r_ads_dout.DATAB
ADS_dout[29] => r_ads_dout.DATAB
ADS_dout[29] => r_ads_dout.DATAB
ADS_dout[29] => r_ads_dout.DATAB
ADS_dout[30] => r_ads_dout.DATAB
ADS_dout[30] => r_ads_dout.DATAB
ADS_dout[30] => r_ads_dout.DATAB
ADS_dout[31] => r_ads_dout.DATAB
ADS_dout[31] => r_ads_dout.DATAB
ADS_dout[31] => r_ads_dout.DATAB
ADS_dout[32] => r_ads_dout.DATAB
ADS_dout[32] => r_ads_dout.DATAB
ADS_dout[32] => r_ads_dout.DATAB
ADS_dout[33] => r_ads_dout.DATAB
ADS_dout[33] => r_ads_dout.DATAB
ADS_dout[33] => r_ads_dout.DATAB
ADS_dout[34] => r_ads_dout.DATAB
ADS_dout[34] => r_ads_dout.DATAB
ADS_dout[34] => r_ads_dout.DATAB
ADS_dout[35] => r_ads_dout.DATAB
ADS_dout[35] => r_ads_dout.DATAB
ADS_dout[35] => r_ads_dout.DATAB
ADS_dout[36] => r_ads_dout.DATAB
ADS_dout[36] => r_ads_dout.DATAB
ADS_dout[36] => r_ads_dout.DATAB
ADS_dout[37] => r_ads_dout.DATAB
ADS_dout[37] => r_ads_dout.DATAB
ADS_dout[37] => r_ads_dout.DATAB
ADS_dout[38] => r_ads_dout.DATAB
ADS_dout[38] => r_ads_dout.DATAB
ADS_dout[38] => r_ads_dout.DATAB
ADS_dout[39] => r_ads_dout.DATAB
ADS_dout[39] => r_ads_dout.DATAB
ADS_dout[39] => r_ads_dout.DATAB
ADS_dout[40] => r_ads_dout.DATAB
ADS_dout[40] => r_ads_dout.DATAB
ADS_dout[40] => r_ads_dout.DATAB
ADS_dout[41] => r_ads_dout.DATAB
ADS_dout[41] => r_ads_dout.DATAB
ADS_dout[41] => r_ads_dout.DATAB
ADS_dout[42] => r_ads_dout.DATAB
ADS_dout[42] => r_ads_dout.DATAB
ADS_dout[42] => r_ads_dout.DATAB
ADS_dout[43] => r_ads_dout.DATAB
ADS_dout[43] => r_ads_dout.DATAB
ADS_dout[43] => r_ads_dout.DATAB
ADS_dout[44] => r_ads_dout.DATAB
ADS_dout[44] => r_ads_dout.DATAB
ADS_dout[44] => r_ads_dout.DATAB
ADS_dout[45] => r_ads_dout.DATAB
ADS_dout[45] => r_ads_dout.DATAB
ADS_dout[45] => r_ads_dout.DATAB
ADS_dout[46] => r_ads_dout.DATAB
ADS_dout[46] => r_ads_dout.DATAB
ADS_dout[46] => r_ads_dout.DATAB
ADS_dout[47] => r_ads_dout.DATAB
ADS_dout[47] => r_ads_dout.DATAB
ADS_dout[47] => r_ads_dout.DATAB
ADS_dout[48] => r_ads_dout.DATAB
ADS_dout[48] => r_ads_dout.DATAB
ADS_dout[48] => r_ads_dout.DATAB
ADS_dout[49] => r_ads_dout.DATAB
ADS_dout[49] => r_ads_dout.DATAB
ADS_dout[49] => r_ads_dout.DATAB
ADS_dout[50] => r_ads_dout.DATAB
ADS_dout[50] => r_ads_dout.DATAB
ADS_dout[50] => r_ads_dout.DATAB
ADS_dout[51] => r_ads_dout.DATAB
ADS_dout[51] => r_ads_dout.DATAB
ADS_dout[51] => r_ads_dout.DATAB
ADS_dout[52] => r_ads_dout.DATAB
ADS_dout[52] => r_ads_dout.DATAB
ADS_dout[52] => r_ads_dout.DATAB
ADS_dout[53] => r_ads_dout.DATAB
ADS_dout[53] => r_ads_dout.DATAB
ADS_dout[53] => r_ads_dout.DATAB
ADS_dout[54] => r_ads_dout.DATAB
ADS_dout[54] => r_ads_dout.DATAB
ADS_dout[54] => r_ads_dout.DATAB
ADS_dout[55] => r_ads_dout.DATAB
ADS_dout[55] => r_ads_dout.DATAB
ADS_dout[55] => r_ads_dout.DATAB
ADS_dout[56] => r_ads_dout.DATAB
ADS_dout[56] => r_ads_dout.DATAB
ADS_dout[56] => r_ads_dout.DATAB
ADS_dout[57] => r_ads_dout.DATAB
ADS_dout[57] => r_ads_dout.DATAB
ADS_dout[57] => r_ads_dout.DATAB
ADS_dout[58] => r_ads_dout.DATAB
ADS_dout[58] => r_ads_dout.DATAB
ADS_dout[58] => r_ads_dout.DATAB
ADS_dout[59] => r_ads_dout.DATAB
ADS_dout[59] => r_ads_dout.DATAB
ADS_dout[59] => r_ads_dout.DATAB
ADS_dout[60] => r_ads_dout.DATAB
ADS_dout[60] => r_ads_dout.DATAB
ADS_dout[60] => r_ads_dout.DATAB
ADS_dout[61] => r_ads_dout.DATAB
ADS_dout[61] => r_ads_dout.DATAB
ADS_dout[61] => r_ads_dout.DATAB
ADS_dout[62] => r_ads_dout.DATAB
ADS_dout[62] => r_ads_dout.DATAB
ADS_dout[62] => r_ads_dout.DATAB
ADS_dout[63] => r_ads_dout.DATAB
ADS_dout[63] => r_ads_dout.DATAB
ADS_dout[63] => r_ads_dout.DATAB
ADS_dout[64] => r_ads_dout.DATAB
ADS_dout[64] => r_ads_dout.DATAB
ADS_dout[64] => r_ads_dout.DATAB
ADS_dout[65] => r_ads_dout.DATAB
ADS_dout[65] => r_ads_dout.DATAB
ADS_dout[65] => r_ads_dout.DATAB
ADS_dout[66] => r_ads_dout.DATAB
ADS_dout[66] => r_ads_dout.DATAB
ADS_dout[66] => r_ads_dout.DATAB
ADS_dout[67] => r_ads_dout.DATAB
ADS_dout[67] => r_ads_dout.DATAB
ADS_dout[67] => r_ads_dout.DATAB
ADS_dout[68] => r_ads_dout.DATAB
ADS_dout[68] => r_ads_dout.DATAB
ADS_dout[68] => r_ads_dout.DATAB
ADS_dout[69] => r_ads_dout.DATAB
ADS_dout[69] => r_ads_dout.DATAB
ADS_dout[69] => r_ads_dout.DATAB
ADS_dout[70] => r_ads_dout.DATAB
ADS_dout[70] => r_ads_dout.DATAB
ADS_dout[70] => r_ads_dout.DATAB
ADS_dout[71] => r_ads_dout.DATAB
ADS_dout[71] => r_ads_dout.DATAB
ADS_dout[71] => r_ads_dout.DATAB
ADS_busy => r_ads_cmd_data_read.OUTPUTSELECT
ADS_busy => r_ads_cmd_sys.OUTPUTSELECT
ADS_busy => r_ads_cmd_reg.OUTPUTSELECT
ADS_busy => r_ads_cmd_sys.OUTPUTSELECT
ADS_busy => r_ads_cmd_reg.OUTPUTSELECT
ADS_busy => r_ads_cmd_data_read.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din2.OUTPUTSELECT
ADS_busy => r_ads_din2.OUTPUTSELECT
ADS_busy => r_ads_din2.OUTPUTSELECT
ADS_busy => r_ads_din2.OUTPUTSELECT
ADS_busy => r_ads_din2.OUTPUTSELECT
ADS_busy => r_ads_din2.OUTPUTSELECT
ADS_busy => r_ads_din2.OUTPUTSELECT
ADS_busy => r_ads_din2.OUTPUTSELECT
ADS_busy => r_ads_cmd_data_read.OUTPUTSELECT
ADS_busy => r_ads_cmd_sys.OUTPUTSELECT
ADS_busy => r_ads_cmd_reg.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => r_ads_din1.OUTPUTSELECT
ADS_busy => Selector136.IN3
ADS_busy => Selector139.IN3
ADS_busy => Selector140.IN3
ADS_busy => Selector137.IN3
ADS_busy => Selector138.IN3
ADS_busy => Selector145.IN3
ADS_busy => Selector146.IN3
ADS_busy => Selector146.IN1
ADS_busy => Selector138.IN1
ADS_busy => Selector140.IN1
ADS_busy => Selector141.IN2
ADS_busy => Selector141.IN3
ADS_busy => Selector141.IN4
ADS_busy => Selector141.IN5
ADS_drdy => always0.IN1
ADS_drdy => r_ads_drdy_readed.OUTPUTSELECT


|khu_sensor|uart_regs:Uregs
clk => clk.IN3
wb_rst_i => wb_rst_i.IN3
wb_addr_i[0] => Mux0.IN6
wb_addr_i[0] => Mux1.IN6
wb_addr_i[0] => Mux2.IN6
wb_addr_i[0] => Mux3.IN6
wb_addr_i[0] => Mux4.IN5
wb_addr_i[0] => Mux5.IN5
wb_addr_i[0] => Mux6.IN5
wb_addr_i[0] => Mux7.IN5
wb_addr_i[0] => Equal0.IN2
wb_addr_i[0] => Equal1.IN1
wb_addr_i[0] => Equal2.IN0
wb_addr_i[0] => Equal3.IN2
wb_addr_i[0] => Equal4.IN2
wb_addr_i[0] => Equal5.IN2
wb_addr_i[0] => Equal6.IN1
wb_addr_i[0] => Equal7.IN2
wb_addr_i[1] => Mux0.IN5
wb_addr_i[1] => Mux1.IN5
wb_addr_i[1] => Mux2.IN5
wb_addr_i[1] => Mux3.IN5
wb_addr_i[1] => Mux4.IN4
wb_addr_i[1] => Mux5.IN4
wb_addr_i[1] => Mux6.IN4
wb_addr_i[1] => Mux7.IN4
wb_addr_i[1] => Equal0.IN0
wb_addr_i[1] => Equal1.IN2
wb_addr_i[1] => Equal2.IN2
wb_addr_i[1] => Equal3.IN1
wb_addr_i[1] => Equal4.IN1
wb_addr_i[1] => Equal5.IN1
wb_addr_i[1] => Equal6.IN0
wb_addr_i[1] => Equal7.IN1
wb_addr_i[2] => Mux0.IN4
wb_addr_i[2] => Mux1.IN4
wb_addr_i[2] => Mux2.IN4
wb_addr_i[2] => Mux3.IN4
wb_addr_i[2] => Mux4.IN3
wb_addr_i[2] => Mux5.IN3
wb_addr_i[2] => Mux6.IN3
wb_addr_i[2] => Mux7.IN3
wb_addr_i[2] => Equal0.IN1
wb_addr_i[2] => Equal1.IN0
wb_addr_i[2] => Equal2.IN1
wb_addr_i[2] => Equal3.IN0
wb_addr_i[2] => Equal4.IN0
wb_addr_i[2] => Equal5.IN0
wb_addr_i[2] => Equal6.IN2
wb_addr_i[2] => Equal7.IN0
wb_dat_i[0] => wb_dat_i[0].IN1
wb_dat_i[1] => wb_dat_i[1].IN1
wb_dat_i[2] => wb_dat_i[2].IN1
wb_dat_i[3] => wb_dat_i[3].IN1
wb_dat_i[4] => wb_dat_i[4].IN1
wb_dat_i[5] => wb_dat_i[5].IN1
wb_dat_i[6] => wb_dat_i[6].IN1
wb_dat_i[7] => wb_dat_i[7].IN1
wb_dat_o[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
wb_we_i => fifo_write.IN1
wb_we_i => always4.IN1
wb_we_i => always5.IN1
wb_we_i => always6.IN1
wb_we_i => always7.IN1
wb_we_i => always8.IN1
wb_re_i => lsr_mask_condition.IN1
wb_re_i => iir_read.IN1
wb_re_i => msr_read.IN1
wb_re_i => fifo_read.IN1
modem_inputs[0] => dcd_c.DATAA
modem_inputs[0] => msr.IN1
modem_inputs[0] => delayed_modem_signals[3].DATAIN
modem_inputs[1] => ri_c.DATAA
modem_inputs[1] => msr.IN1
modem_inputs[1] => delayed_modem_signals[2].DATAIN
modem_inputs[2] => dsr_c.DATAA
modem_inputs[2] => msr.IN1
modem_inputs[2] => delayed_modem_signals[1].DATAIN
modem_inputs[3] => cts_c.DATAA
modem_inputs[3] => msr.IN1
modem_inputs[3] => delayed_modem_signals[0].DATAIN
stx_pad_o <= stx_pad_o.DB_MAX_OUTPUT_PORT_TYPE
srx_pad_i => srx_pad_i.IN1
rts_pad_o <= mcr[1].DB_MAX_OUTPUT_PORT_TYPE
dtr_pad_o <= mcr[0].DB_MAX_OUTPUT_PORT_TYPE
int_o <= int_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
baud_o <= enable.DB_MAX_OUTPUT_PORT_TYPE


|khu_sensor|uart_regs:Uregs|uart_transmitter:transmitter
clk => clk.IN1
wb_rst_i => wb_rst_i.IN1
lcr[0] => Mux0.IN5
lcr[0] => Equal0.IN5
lcr[0] => Mux8.IN1
lcr[1] => Mux0.IN4
lcr[1] => Equal0.IN4
lcr[1] => Mux7.IN1
lcr[2] => Equal0.IN3
lcr[2] => counter.DATAB
lcr[3] => tstate.DATAA
lcr[3] => tstate.DATAA
lcr[3] => bit_out.OUTPUTSELECT
lcr[3] => tstate.DATAA
lcr[4] => Mux1.IN4
lcr[5] => Mux1.IN3
lcr[6] => stx_pad_o.OUTPUTSELECT
lcr[7] => ~NO_FANOUT~
tf_push => tf_push.IN1
wb_dat_i[0] => tf_data_in[0].IN1
wb_dat_i[1] => tf_data_in[1].IN1
wb_dat_i[2] => tf_data_in[2].IN1
wb_dat_i[3] => tf_data_in[3].IN1
wb_dat_i[4] => tf_data_in[4].IN1
wb_dat_i[5] => tf_data_in[5].IN1
wb_dat_i[6] => tf_data_in[6].IN1
wb_dat_i[7] => tf_data_in[7].IN1
enable => tf_pop.OUTPUTSELECT
enable => bit_counter[0].ENA
enable => tstate[2]~reg0.ENA
enable => tstate[1]~reg0.ENA
enable => tstate[0]~reg0.ENA
enable => stx_o_tmp.ENA
enable => counter[4].ENA
enable => counter[3].ENA
enable => counter[2].ENA
enable => counter[1].ENA
enable => counter[0].ENA
enable => shift_out[6].ENA
enable => shift_out[5].ENA
enable => shift_out[4].ENA
enable => shift_out[3].ENA
enable => shift_out[2].ENA
enable => shift_out[1].ENA
enable => shift_out[0].ENA
enable => bit_out.ENA
enable => parity_xor.ENA
enable => bit_counter[2].ENA
enable => bit_counter[1].ENA
stx_pad_o <= stx_pad_o.DB_MAX_OUTPUT_PORT_TYPE
tstate[0] <= tstate[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tstate[1] <= tstate[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tstate[2] <= tstate[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tf_count[0] <= uart_tfifo:fifo_tx.count
tf_count[1] <= uart_tfifo:fifo_tx.count
tf_count[2] <= uart_tfifo:fifo_tx.count
tf_count[3] <= uart_tfifo:fifo_tx.count
tf_count[4] <= uart_tfifo:fifo_tx.count
tx_reset => tx_reset.IN1
lsr_mask => lsr_mask.IN1


|khu_sensor|uart_regs:Uregs|uart_transmitter:transmitter|uart_tfifo:fifo_tx
clk => clk.IN1
wb_rst_i => overrun~reg0.ACLR
wb_rst_i => count[0]~reg0.ACLR
wb_rst_i => count[1]~reg0.ACLR
wb_rst_i => count[2]~reg0.ACLR
wb_rst_i => count[3]~reg0.ACLR
wb_rst_i => count[4]~reg0.ACLR
wb_rst_i => bottom[0].ACLR
wb_rst_i => bottom[1].ACLR
wb_rst_i => bottom[2].ACLR
wb_rst_i => bottom[3].ACLR
wb_rst_i => top[0].ACLR
wb_rst_i => top[1].ACLR
wb_rst_i => top[2].ACLR
wb_rst_i => top[3].ACLR
data_in[0] => data_in[0].IN1
data_in[1] => data_in[1].IN1
data_in[2] => data_in[2].IN1
data_in[3] => data_in[3].IN1
data_in[4] => data_in[4].IN1
data_in[5] => data_in[5].IN1
data_in[6] => data_in[6].IN1
data_in[7] => data_in[7].IN1
data_out[0] <= raminfr:tfifo.dpo
data_out[1] <= raminfr:tfifo.dpo
data_out[2] <= raminfr:tfifo.dpo
data_out[3] <= raminfr:tfifo.dpo
data_out[4] <= raminfr:tfifo.dpo
data_out[5] <= raminfr:tfifo.dpo
data_out[6] <= raminfr:tfifo.dpo
data_out[7] <= raminfr:tfifo.dpo
push => push.IN1
pop => Mux0.IN3
pop => Mux1.IN3
pop => Mux2.IN3
pop => Mux3.IN3
pop => Decoder0.IN1
pop => Mux4.IN3
pop => Mux5.IN3
pop => Mux6.IN3
pop => Mux7.IN3
pop => Mux8.IN3
overrun <= overrun~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => always1.IN0
reset_status => always1.IN1


|khu_sensor|uart_regs:Uregs|uart_transmitter:transmitter|uart_tfifo:fifo_tx|raminfr:tfifo
clk => ram.we_a.CLK
clk => ram.waddr_a[4].CLK
clk => ram.waddr_a[3].CLK
clk => ram.waddr_a[2].CLK
clk => ram.waddr_a[1].CLK
clk => ram.waddr_a[0].CLK
clk => ram.data_a[7].CLK
clk => ram.data_a[6].CLK
clk => ram.data_a[5].CLK
clk => ram.data_a[4].CLK
clk => ram.data_a[3].CLK
clk => ram.data_a[2].CLK
clk => ram.data_a[1].CLK
clk => ram.data_a[0].CLK
clk => ram.CLK0
we => ram.we_a.DATAIN
we => ram.WE
a[0] => ram.waddr_a[0].DATAIN
a[0] => ram.WADDR
a[1] => ram.waddr_a[1].DATAIN
a[1] => ram.WADDR1
a[2] => ram.waddr_a[2].DATAIN
a[2] => ram.WADDR2
a[3] => ram.waddr_a[3].DATAIN
a[3] => ram.WADDR3
dpra[0] => ram.RADDR
dpra[1] => ram.RADDR1
dpra[2] => ram.RADDR2
dpra[3] => ram.RADDR3
di[0] => ram.data_a[0].DATAIN
di[0] => ram.DATAIN
di[1] => ram.data_a[1].DATAIN
di[1] => ram.DATAIN1
di[2] => ram.data_a[2].DATAIN
di[2] => ram.DATAIN2
di[3] => ram.data_a[3].DATAIN
di[3] => ram.DATAIN3
di[4] => ram.data_a[4].DATAIN
di[4] => ram.DATAIN4
di[5] => ram.data_a[5].DATAIN
di[5] => ram.DATAIN5
di[6] => ram.data_a[6].DATAIN
di[6] => ram.DATAIN6
di[7] => ram.data_a[7].DATAIN
di[7] => ram.DATAIN7
dpo[0] <= ram.DATAOUT
dpo[1] <= ram.DATAOUT1
dpo[2] <= ram.DATAOUT2
dpo[3] <= ram.DATAOUT3
dpo[4] <= ram.DATAOUT4
dpo[5] <= ram.DATAOUT5
dpo[6] <= ram.DATAOUT6
dpo[7] <= ram.DATAOUT7


|khu_sensor|uart_regs:Uregs|uart_sync_flops:i_uart_sync_flops
rst_i => sync_dat_o[0]~reg0.PRESET
rst_i => flop_0[0].PRESET
clk_i => sync_dat_o[0]~reg0.CLK
clk_i => flop_0[0].CLK
stage1_rst_i => sync_dat_o.OUTPUTSELECT
stage1_clk_en_i => sync_dat_o.OUTPUTSELECT
async_dat_i[0] => flop_0[0].DATAIN
sync_dat_o[0] <= sync_dat_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|khu_sensor|uart_regs:Uregs|uart_receiver:receiver
clk => clk.IN1
wb_rst_i => wb_rst_i.IN1
lcr[0] => Decoder0.IN1
lcr[0] => Mux0.IN1
lcr[0] => Mux1.IN1
lcr[0] => Decoder2.IN3
lcr[0] => Decoder3.IN2
lcr[0] => Decoder4.IN2
lcr[0] => Selector15.IN4
lcr[1] => Decoder0.IN0
lcr[1] => Mux0.IN0
lcr[1] => Mux1.IN0
lcr[1] => Decoder2.IN2
lcr[1] => Decoder4.IN1
lcr[1] => Selector14.IN4
lcr[2] => Decoder2.IN1
lcr[2] => Decoder3.IN1
lcr[2] => Decoder4.IN0
lcr[3] => rparity_error.OUTPUTSELECT
lcr[3] => Decoder2.IN0
lcr[3] => Decoder3.IN0
lcr[3] => rstate.DATAB
lcr[3] => rstate.DATAB
lcr[3] => rstate.DATAB
lcr[4] => Mux2.IN3
lcr[5] => Mux2.IN2
lcr[6] => ~NO_FANOUT~
lcr[7] => ~NO_FANOUT~
rf_pop => rf_pop.IN1
srx_pad_i => rshift.DATAB
srx_pad_i => Mux0.IN2
srx_pad_i => Mux1.IN2
srx_pad_i => rshift.DATAB
srx_pad_i => rparity.DATAB
srx_pad_i => always0.IN1
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => always0.IN1
srx_pad_i => rstate.DATAB
srx_pad_i => rstate.DATAB
srx_pad_i => rframing_error.DATAB
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => always3.IN1
enable => always4.IN1
enable => rstate[3]~reg0.ENA
enable => rstate[2]~reg0.ENA
enable => rstate[1]~reg0.ENA
enable => rstate[0]~reg0.ENA
enable => rcounter16[3].ENA
enable => rcounter16[2].ENA
enable => rcounter16[1].ENA
enable => rcounter16[0].ENA
enable => rbit_counter[2].ENA
enable => rbit_counter[1].ENA
enable => rbit_counter[0].ENA
enable => rparity_xor.ENA
enable => rframing_error.ENA
enable => rparity_error.ENA
enable => rparity.ENA
enable => rshift[7].ENA
enable => rshift[6].ENA
enable => rshift[5].ENA
enable => rshift[4].ENA
enable => rshift[3].ENA
enable => rshift[2].ENA
enable => rshift[1].ENA
enable => rshift[0].ENA
enable => rf_push.ENA
counter_t[0] <= counter_t[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[1] <= counter_t[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[2] <= counter_t[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[3] <= counter_t[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[4] <= counter_t[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[5] <= counter_t[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[6] <= counter_t[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[7] <= counter_t[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[8] <= counter_t[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[9] <= counter_t[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rf_count[0] <= uart_rfifo:fifo_rx.count
rf_count[1] <= uart_rfifo:fifo_rx.count
rf_count[2] <= uart_rfifo:fifo_rx.count
rf_count[3] <= uart_rfifo:fifo_rx.count
rf_count[4] <= uart_rfifo:fifo_rx.count
rf_data_out[0] <= uart_rfifo:fifo_rx.data_out
rf_data_out[1] <= uart_rfifo:fifo_rx.data_out
rf_data_out[2] <= uart_rfifo:fifo_rx.data_out
rf_data_out[3] <= uart_rfifo:fifo_rx.data_out
rf_data_out[4] <= uart_rfifo:fifo_rx.data_out
rf_data_out[5] <= uart_rfifo:fifo_rx.data_out
rf_data_out[6] <= uart_rfifo:fifo_rx.data_out
rf_data_out[7] <= uart_rfifo:fifo_rx.data_out
rf_data_out[8] <= uart_rfifo:fifo_rx.data_out
rf_data_out[9] <= uart_rfifo:fifo_rx.data_out
rf_data_out[10] <= uart_rfifo:fifo_rx.data_out
rf_error_bit <= uart_rfifo:fifo_rx.error_bit
rf_overrun <= uart_rfifo:fifo_rx.overrun
rx_reset => rx_reset.IN1
lsr_mask => lsr_mask.IN1
rstate[0] <= rstate[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstate[1] <= rstate[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstate[2] <= rstate[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstate[3] <= rstate[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rf_push_pulse <= rf_push_pulse.DB_MAX_OUTPUT_PORT_TYPE


|khu_sensor|uart_regs:Uregs|uart_receiver:receiver|uart_rfifo:fifo_rx
clk => clk.IN1
wb_rst_i => overrun~reg0.ACLR
wb_rst_i => fifo[0][0].ACLR
wb_rst_i => fifo[0][1].ACLR
wb_rst_i => fifo[0][2].ACLR
wb_rst_i => fifo[1][0].ACLR
wb_rst_i => fifo[1][1].ACLR
wb_rst_i => fifo[1][2].ACLR
wb_rst_i => fifo[2][0].ACLR
wb_rst_i => fifo[2][1].ACLR
wb_rst_i => fifo[2][2].ACLR
wb_rst_i => fifo[3][0].ACLR
wb_rst_i => fifo[3][1].ACLR
wb_rst_i => fifo[3][2].ACLR
wb_rst_i => fifo[4][0].ACLR
wb_rst_i => fifo[4][1].ACLR
wb_rst_i => fifo[4][2].ACLR
wb_rst_i => fifo[5][0].ACLR
wb_rst_i => fifo[5][1].ACLR
wb_rst_i => fifo[5][2].ACLR
wb_rst_i => fifo[6][0].ACLR
wb_rst_i => fifo[6][1].ACLR
wb_rst_i => fifo[6][2].ACLR
wb_rst_i => fifo[7][0].ACLR
wb_rst_i => fifo[7][1].ACLR
wb_rst_i => fifo[7][2].ACLR
wb_rst_i => fifo[8][0].ACLR
wb_rst_i => fifo[8][1].ACLR
wb_rst_i => fifo[8][2].ACLR
wb_rst_i => fifo[9][0].ACLR
wb_rst_i => fifo[9][1].ACLR
wb_rst_i => fifo[9][2].ACLR
wb_rst_i => fifo[10][0].ACLR
wb_rst_i => fifo[10][1].ACLR
wb_rst_i => fifo[10][2].ACLR
wb_rst_i => fifo[11][0].ACLR
wb_rst_i => fifo[11][1].ACLR
wb_rst_i => fifo[11][2].ACLR
wb_rst_i => fifo[12][0].ACLR
wb_rst_i => fifo[12][1].ACLR
wb_rst_i => fifo[12][2].ACLR
wb_rst_i => fifo[13][0].ACLR
wb_rst_i => fifo[13][1].ACLR
wb_rst_i => fifo[13][2].ACLR
wb_rst_i => fifo[14][0].ACLR
wb_rst_i => fifo[14][1].ACLR
wb_rst_i => fifo[14][2].ACLR
wb_rst_i => fifo[15][0].ACLR
wb_rst_i => fifo[15][1].ACLR
wb_rst_i => fifo[15][2].ACLR
wb_rst_i => fifo[16][0].ACLR
wb_rst_i => fifo[16][1].ACLR
wb_rst_i => fifo[16][2].ACLR
wb_rst_i => fifo[17][0].ACLR
wb_rst_i => fifo[17][1].ACLR
wb_rst_i => fifo[17][2].ACLR
wb_rst_i => fifo[18][0].ACLR
wb_rst_i => fifo[18][1].ACLR
wb_rst_i => fifo[18][2].ACLR
wb_rst_i => fifo[19][0].ACLR
wb_rst_i => fifo[19][1].ACLR
wb_rst_i => fifo[19][2].ACLR
wb_rst_i => fifo[20][0].ACLR
wb_rst_i => fifo[20][1].ACLR
wb_rst_i => fifo[20][2].ACLR
wb_rst_i => fifo[21][0].ACLR
wb_rst_i => fifo[21][1].ACLR
wb_rst_i => fifo[21][2].ACLR
wb_rst_i => fifo[22][0].ACLR
wb_rst_i => fifo[22][1].ACLR
wb_rst_i => fifo[22][2].ACLR
wb_rst_i => fifo[23][0].ACLR
wb_rst_i => fifo[23][1].ACLR
wb_rst_i => fifo[23][2].ACLR
wb_rst_i => fifo[24][0].ACLR
wb_rst_i => fifo[24][1].ACLR
wb_rst_i => fifo[24][2].ACLR
wb_rst_i => fifo[25][0].ACLR
wb_rst_i => fifo[25][1].ACLR
wb_rst_i => fifo[25][2].ACLR
wb_rst_i => fifo[26][0].ACLR
wb_rst_i => fifo[26][1].ACLR
wb_rst_i => fifo[26][2].ACLR
wb_rst_i => fifo[27][0].ACLR
wb_rst_i => fifo[27][1].ACLR
wb_rst_i => fifo[27][2].ACLR
wb_rst_i => fifo[28][0].ACLR
wb_rst_i => fifo[28][1].ACLR
wb_rst_i => fifo[28][2].ACLR
wb_rst_i => fifo[29][0].ACLR
wb_rst_i => fifo[29][1].ACLR
wb_rst_i => fifo[29][2].ACLR
wb_rst_i => fifo[30][0].ACLR
wb_rst_i => fifo[30][1].ACLR
wb_rst_i => fifo[30][2].ACLR
wb_rst_i => fifo[31][0].ACLR
wb_rst_i => fifo[31][1].ACLR
wb_rst_i => fifo[31][2].ACLR
wb_rst_i => count[0]~reg0.ACLR
wb_rst_i => count[1]~reg0.ACLR
wb_rst_i => count[2]~reg0.ACLR
wb_rst_i => count[3]~reg0.ACLR
wb_rst_i => count[4]~reg0.ACLR
wb_rst_i => bottom[0].ACLR
wb_rst_i => bottom[1].ACLR
wb_rst_i => bottom[2].ACLR
wb_rst_i => bottom[3].ACLR
wb_rst_i => top[0].ACLR
wb_rst_i => top[1].ACLR
wb_rst_i => top[2].ACLR
wb_rst_i => top[3].ACLR
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[3] => data_in[3].IN1
data_in[4] => data_in[4].IN1
data_in[5] => data_in[5].IN1
data_in[6] => data_in[6].IN1
data_in[7] => data_in[7].IN1
data_in[8] => data_in[8].IN1
data_in[9] => data_in[9].IN1
data_in[10] => data_in[10].IN1
data_out[0] <= Mux59.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= Mux58.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= Mux57.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= raminfr:rfifo.dpo
data_out[4] <= raminfr:rfifo.dpo
data_out[5] <= raminfr:rfifo.dpo
data_out[6] <= raminfr:rfifo.dpo
data_out[7] <= raminfr:rfifo.dpo
data_out[8] <= raminfr:rfifo.dpo
data_out[9] <= raminfr:rfifo.dpo
data_out[10] <= raminfr:rfifo.dpo
push => push.IN1
pop => Mux0.IN3
pop => Mux1.IN3
pop => Mux2.IN3
pop => Mux3.IN3
pop => Decoder2.IN1
pop => Mux4.IN4
pop => Mux5.IN4
pop => Mux6.IN4
pop => Mux7.IN4
pop => Mux8.IN4
pop => Mux9.IN4
pop => Mux10.IN4
pop => Mux11.IN4
pop => Mux12.IN4
pop => Mux13.IN4
pop => Mux14.IN4
pop => Mux15.IN4
pop => Mux16.IN4
pop => Mux17.IN4
pop => Mux18.IN4
pop => Mux19.IN4
pop => Mux20.IN4
pop => Mux21.IN4
pop => Mux22.IN4
pop => Mux23.IN4
pop => Mux24.IN4
pop => Mux25.IN4
pop => Mux26.IN4
pop => Mux27.IN4
pop => Mux28.IN4
pop => Mux29.IN4
pop => Mux30.IN4
pop => Mux31.IN4
pop => Mux32.IN4
pop => Mux33.IN4
pop => Mux34.IN4
pop => Mux35.IN4
pop => Mux36.IN4
pop => Mux37.IN4
pop => Mux38.IN4
pop => Mux39.IN4
pop => Mux40.IN4
pop => Mux41.IN4
pop => Mux42.IN4
pop => Mux43.IN4
pop => Mux44.IN4
pop => Mux45.IN4
pop => Mux46.IN4
pop => Mux47.IN4
pop => Mux48.IN4
pop => Mux49.IN4
pop => Mux50.IN4
pop => Mux51.IN4
pop => Mux52.IN3
pop => Mux53.IN3
pop => Mux54.IN3
pop => Mux55.IN3
pop => Mux56.IN3
overrun <= overrun~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_bit <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => always1.IN0
fifo_reset => fifo[31][2].ENA
fifo_reset => fifo[31][1].ENA
fifo_reset => fifo[31][0].ENA
fifo_reset => fifo[30][2].ENA
fifo_reset => fifo[30][1].ENA
fifo_reset => fifo[30][0].ENA
fifo_reset => fifo[29][2].ENA
fifo_reset => fifo[29][1].ENA
fifo_reset => fifo[29][0].ENA
fifo_reset => fifo[28][2].ENA
fifo_reset => fifo[28][1].ENA
fifo_reset => fifo[28][0].ENA
fifo_reset => fifo[27][2].ENA
fifo_reset => fifo[27][1].ENA
fifo_reset => fifo[27][0].ENA
fifo_reset => fifo[26][2].ENA
fifo_reset => fifo[26][1].ENA
fifo_reset => fifo[26][0].ENA
fifo_reset => fifo[25][2].ENA
fifo_reset => fifo[25][1].ENA
fifo_reset => fifo[25][0].ENA
fifo_reset => fifo[24][2].ENA
fifo_reset => fifo[24][1].ENA
fifo_reset => fifo[24][0].ENA
fifo_reset => fifo[23][2].ENA
fifo_reset => fifo[23][1].ENA
fifo_reset => fifo[23][0].ENA
fifo_reset => fifo[22][2].ENA
fifo_reset => fifo[22][1].ENA
fifo_reset => fifo[22][0].ENA
fifo_reset => fifo[21][2].ENA
fifo_reset => fifo[21][1].ENA
fifo_reset => fifo[21][0].ENA
fifo_reset => fifo[20][2].ENA
fifo_reset => fifo[20][1].ENA
fifo_reset => fifo[20][0].ENA
fifo_reset => fifo[19][2].ENA
fifo_reset => fifo[19][1].ENA
fifo_reset => fifo[19][0].ENA
fifo_reset => fifo[18][2].ENA
fifo_reset => fifo[18][1].ENA
fifo_reset => fifo[18][0].ENA
fifo_reset => fifo[17][2].ENA
fifo_reset => fifo[17][1].ENA
fifo_reset => fifo[17][0].ENA
fifo_reset => fifo[16][2].ENA
fifo_reset => fifo[16][1].ENA
fifo_reset => fifo[16][0].ENA
reset_status => always1.IN1


|khu_sensor|uart_regs:Uregs|uart_receiver:receiver|uart_rfifo:fifo_rx|raminfr:rfifo
clk => ram.we_a.CLK
clk => ram.waddr_a[4].CLK
clk => ram.waddr_a[3].CLK
clk => ram.waddr_a[2].CLK
clk => ram.waddr_a[1].CLK
clk => ram.waddr_a[0].CLK
clk => ram.data_a[7].CLK
clk => ram.data_a[6].CLK
clk => ram.data_a[5].CLK
clk => ram.data_a[4].CLK
clk => ram.data_a[3].CLK
clk => ram.data_a[2].CLK
clk => ram.data_a[1].CLK
clk => ram.data_a[0].CLK
clk => ram.CLK0
we => ram.we_a.DATAIN
we => ram.WE
a[0] => ram.waddr_a[0].DATAIN
a[0] => ram.WADDR
a[1] => ram.waddr_a[1].DATAIN
a[1] => ram.WADDR1
a[2] => ram.waddr_a[2].DATAIN
a[2] => ram.WADDR2
a[3] => ram.waddr_a[3].DATAIN
a[3] => ram.WADDR3
dpra[0] => ram.RADDR
dpra[1] => ram.RADDR1
dpra[2] => ram.RADDR2
dpra[3] => ram.RADDR3
di[0] => ram.data_a[0].DATAIN
di[0] => ram.DATAIN
di[1] => ram.data_a[1].DATAIN
di[1] => ram.DATAIN1
di[2] => ram.data_a[2].DATAIN
di[2] => ram.DATAIN2
di[3] => ram.data_a[3].DATAIN
di[3] => ram.DATAIN3
di[4] => ram.data_a[4].DATAIN
di[4] => ram.DATAIN4
di[5] => ram.data_a[5].DATAIN
di[5] => ram.DATAIN5
di[6] => ram.data_a[6].DATAIN
di[6] => ram.DATAIN6
di[7] => ram.data_a[7].DATAIN
di[7] => ram.DATAIN7
dpo[0] <= ram.DATAOUT
dpo[1] <= ram.DATAOUT1
dpo[2] <= ram.DATAOUT2
dpo[3] <= ram.DATAOUT3
dpo[4] <= ram.DATAOUT4
dpo[5] <= ram.DATAOUT5
dpo[6] <= ram.DATAOUT6
dpo[7] <= ram.DATAOUT7


|khu_sensor|my_ddio_out:ddio_out_inst
datain_h[0] => datain_h[0].IN1
datain_h[1] => datain_h[1].IN1
datain_h[2] => datain_h[2].IN1
datain_h[3] => datain_h[3].IN1
datain_h[4] => datain_h[4].IN1
datain_h[5] => datain_h[5].IN1
datain_h[6] => datain_h[6].IN1
datain_h[7] => datain_h[7].IN1
datain_l[0] => datain_l[0].IN1
datain_l[1] => datain_l[1].IN1
datain_l[2] => datain_l[2].IN1
datain_l[3] => datain_l[3].IN1
datain_l[4] => datain_l[4].IN1
datain_l[5] => datain_l[5].IN1
datain_l[6] => datain_l[6].IN1
datain_l[7] => datain_l[7].IN1
outclock => outclock.IN1
dataout[0] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[1] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[2] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[3] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[4] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[5] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[6] <= altddio_out:ALTDDIO_OUT_component.dataout
dataout[7] <= altddio_out:ALTDDIO_OUT_component.dataout


|khu_sensor|my_ddio_out:ddio_out_inst|altddio_out:ALTDDIO_OUT_component
datain_h[0] => ddio_out_0aj:auto_generated.datain_h[0]
datain_h[1] => ddio_out_0aj:auto_generated.datain_h[1]
datain_h[2] => ddio_out_0aj:auto_generated.datain_h[2]
datain_h[3] => ddio_out_0aj:auto_generated.datain_h[3]
datain_h[4] => ddio_out_0aj:auto_generated.datain_h[4]
datain_h[5] => ddio_out_0aj:auto_generated.datain_h[5]
datain_h[6] => ddio_out_0aj:auto_generated.datain_h[6]
datain_h[7] => ddio_out_0aj:auto_generated.datain_h[7]
datain_l[0] => ddio_out_0aj:auto_generated.datain_l[0]
datain_l[1] => ddio_out_0aj:auto_generated.datain_l[1]
datain_l[2] => ddio_out_0aj:auto_generated.datain_l[2]
datain_l[3] => ddio_out_0aj:auto_generated.datain_l[3]
datain_l[4] => ddio_out_0aj:auto_generated.datain_l[4]
datain_l[5] => ddio_out_0aj:auto_generated.datain_l[5]
datain_l[6] => ddio_out_0aj:auto_generated.datain_l[6]
datain_l[7] => ddio_out_0aj:auto_generated.datain_l[7]
outclock => ddio_out_0aj:auto_generated.outclock
outclocken => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
oe => ~NO_FANOUT~
dataout[0] <> ddio_out_0aj:auto_generated.dataout[0]
dataout[1] <> ddio_out_0aj:auto_generated.dataout[1]
dataout[2] <> ddio_out_0aj:auto_generated.dataout[2]
dataout[3] <> ddio_out_0aj:auto_generated.dataout[3]
dataout[4] <> ddio_out_0aj:auto_generated.dataout[4]
dataout[5] <> ddio_out_0aj:auto_generated.dataout[5]
dataout[6] <> ddio_out_0aj:auto_generated.dataout[6]
dataout[7] <> ddio_out_0aj:auto_generated.dataout[7]
oe_out[0] <= <GND>
oe_out[1] <= <GND>
oe_out[2] <= <GND>
oe_out[3] <= <GND>
oe_out[4] <= <GND>
oe_out[5] <= <GND>
oe_out[6] <= <GND>
oe_out[7] <= <GND>


|khu_sensor|my_ddio_out:ddio_out_inst|altddio_out:ALTDDIO_OUT_component|ddio_out_0aj:auto_generated
datain_h[0] => ddio_outa[0].DATAINHI
datain_h[1] => ddio_outa[1].DATAINHI
datain_h[2] => ddio_outa[2].DATAINHI
datain_h[3] => ddio_outa[3].DATAINHI
datain_h[4] => ddio_outa[4].DATAINHI
datain_h[5] => ddio_outa[5].DATAINHI
datain_h[6] => ddio_outa[6].DATAINHI
datain_h[7] => ddio_outa[7].DATAINHI
datain_l[0] => ddio_outa[0].DATAINLO
datain_l[1] => ddio_outa[1].DATAINLO
datain_l[2] => ddio_outa[2].DATAINLO
datain_l[3] => ddio_outa[3].DATAINLO
datain_l[4] => ddio_outa[4].DATAINLO
datain_l[5] => ddio_outa[5].DATAINLO
datain_l[6] => ddio_outa[6].DATAINLO
datain_l[7] => ddio_outa[7].DATAINLO
dataout[0] <= ddio_outa[0].DATAOUT
dataout[1] <= ddio_outa[1].DATAOUT
dataout[2] <= ddio_outa[2].DATAOUT
dataout[3] <= ddio_outa[3].DATAOUT
dataout[4] <= ddio_outa[4].DATAOUT
dataout[5] <= ddio_outa[5].DATAOUT
dataout[6] <= ddio_outa[6].DATAOUT
dataout[7] <= ddio_outa[7].DATAOUT
outclock => ddio_outa[7].CLKHI
outclock => ddio_outa[7].CLKLO
outclock => ddio_outa[7].MUXSEL
outclock => ddio_outa[6].CLKHI
outclock => ddio_outa[6].CLKLO
outclock => ddio_outa[6].MUXSEL
outclock => ddio_outa[5].CLKHI
outclock => ddio_outa[5].CLKLO
outclock => ddio_outa[5].MUXSEL
outclock => ddio_outa[4].CLKHI
outclock => ddio_outa[4].CLKLO
outclock => ddio_outa[4].MUXSEL
outclock => ddio_outa[3].CLKHI
outclock => ddio_outa[3].CLKLO
outclock => ddio_outa[3].MUXSEL
outclock => ddio_outa[2].CLKHI
outclock => ddio_outa[2].CLKLO
outclock => ddio_outa[2].MUXSEL
outclock => ddio_outa[1].CLKHI
outclock => ddio_outa[1].CLKLO
outclock => ddio_outa[1].MUXSEL
outclock => ddio_outa[0].CLKHI
outclock => ddio_outa[0].CLKLO
outclock => ddio_outa[0].MUXSEL


|khu_sensor|MPR121_controller:u_mpr121
clk => clk.IN1
rstn => r_get_i2c_read_done.ACLR
rstn => r_get_i2c_data_en.ACLR
rstn => r_mpr121_busy.ACLR
rstn => r_i2c_data_i[0].ACLR
rstn => r_i2c_data_i[1].ACLR
rstn => r_i2c_data_i[2].ACLR
rstn => r_i2c_data_i[3].ACLR
rstn => r_i2c_data_i[4].ACLR
rstn => r_i2c_data_i[5].ACLR
rstn => r_i2c_data_i[6].ACLR
rstn => r_i2c_data_i[7].ACLR
rstn => r_i2c_data_o[0].ACLR
rstn => r_i2c_data_o[1].ACLR
rstn => r_i2c_data_o[2].ACLR
rstn => r_i2c_data_o[3].ACLR
rstn => r_i2c_data_o[4].ACLR
rstn => r_i2c_data_o[5].ACLR
rstn => r_i2c_data_o[6].ACLR
rstn => r_i2c_data_o[7].ACLR
rstn => r_i2c_data_out_ready.ACLR
rstn => r_i2c_data_in_last.ACLR
rstn => r_i2c_data_in_valid.ACLR
rstn => r_i2c_cmd_valid.ACLR
rstn => r_i2c_stop.ACLR
rstn => r_i2c_writemulti.ACLR
rstn => r_i2c_write.ACLR
rstn => r_i2c_read.ACLR
rstn => r_i2c_start.ACLR
rstn => r_i2c_rst.PRESET
rstn => r_error_code[0].ACLR
rstn => r_error_code[1].ACLR
rstn => r_error_code[2].ACLR
rstn => r_error_code[3].ACLR
rstn => r_error_code[4].ACLR
rstn => r_error_code[5].ACLR
rstn => r_error_code[6].ACLR
rstn => r_error_code[7].ACLR
rstn => r_wait_timeout[0].ACLR
rstn => r_wait_timeout[1].ACLR
rstn => r_wait_timeout[2].ACLR
rstn => r_wait_timeout[3].ACLR
rstn => r_wait_timeout[4].ACLR
rstn => r_wait_timeout[5].ACLR
rstn => r_wait_timeout[6].ACLR
rstn => r_wait_timeout[7].ACLR
rstn => r_wait_timeout[8].ACLR
rstn => r_wait_timeout[9].ACLR
rstn => r_wait_timeout[10].ACLR
rstn => r_wait_timeout[11].ACLR
rstn => r_wait_timeout[12].ACLR
rstn => r_wait_timeout[13].ACLR
rstn => r_wait_timeout[14].ACLR
rstn => r_wait_timeout[15].ACLR
rstn => r_wait_timeout[16].ACLR
rstn => r_wait_timeout[17].ACLR
rstn => r_wait_timeout[18].ACLR
rstn => r_wait_timeout[19].ACLR
rstn => r_wait_timeout[20].ACLR
rstn => r_wait_timeout[21].ACLR
rstn => r_wait_timeout[22].ACLR
rstn => r_wait_timeout[23].ACLR
rstn => r_wait_timeout[24].ACLR
rstn => r_wait_timeout[25].ACLR
rstn => r_wait_timeout[26].ACLR
rstn => r_wait_timeout[27].ACLR
rstn => r_wait_timeout[28].ACLR
rstn => r_wait_timeout[29].ACLR
rstn => r_wait_timeout[30].ACLR
rstn => r_wait_timeout[31].ACLR
rstn => r_state~3.DATAIN
rstn => r_i2c_reg_din[0].ENA
rstn => r_i2c_reg_addr[7].ENA
rstn => r_i2c_reg_addr[6].ENA
rstn => r_i2c_reg_addr[5].ENA
rstn => r_i2c_reg_addr[4].ENA
rstn => r_i2c_reg_addr[3].ENA
rstn => r_i2c_reg_addr[2].ENA
rstn => r_i2c_reg_addr[1].ENA
rstn => r_i2c_reg_addr[0].ENA
rstn => r_i2c_reg_din[7].ENA
rstn => r_i2c_reg_din[6].ENA
rstn => r_i2c_reg_din[5].ENA
rstn => r_i2c_reg_din[4].ENA
rstn => r_i2c_reg_din[3].ENA
rstn => r_i2c_reg_din[2].ENA
rstn => r_i2c_reg_din[1].ENA
wen => r_mpr121_busy.OUTPUTSELECT
wen => r_state.OUTPUTSELECT
wen => r_state.OUTPUTSELECT
wen => r_state.DATAB
wen => r_state.DATAB
wen => r_state.DATAB
ren => r_state.DATAA
ren => r_state.DATAA
mpr121_reg_addr[0] => r_i2c_reg_addr.DATAB
mpr121_reg_addr[1] => r_i2c_reg_addr.DATAB
mpr121_reg_addr[2] => r_i2c_reg_addr.DATAB
mpr121_reg_addr[3] => r_i2c_reg_addr.DATAB
mpr121_reg_addr[4] => r_i2c_reg_addr.DATAB
mpr121_reg_addr[5] => r_i2c_reg_addr.DATAB
mpr121_reg_addr[6] => r_i2c_reg_addr.DATAB
mpr121_reg_addr[7] => r_i2c_reg_addr.DATAB
mpr121_data_in[0] => r_i2c_reg_din.DATAB
mpr121_data_in[1] => r_i2c_reg_din.DATAB
mpr121_data_in[2] => r_i2c_reg_din.DATAB
mpr121_data_in[3] => r_i2c_reg_din.DATAB
mpr121_data_in[4] => r_i2c_reg_din.DATAB
mpr121_data_in[5] => r_i2c_reg_din.DATAB
mpr121_data_in[6] => r_i2c_reg_din.DATAB
mpr121_data_in[7] => r_i2c_reg_din.DATAB
mpr121_data_out[0] <= r_i2c_data_o[0].DB_MAX_OUTPUT_PORT_TYPE
mpr121_data_out[1] <= r_i2c_data_o[1].DB_MAX_OUTPUT_PORT_TYPE
mpr121_data_out[2] <= r_i2c_data_o[2].DB_MAX_OUTPUT_PORT_TYPE
mpr121_data_out[3] <= r_i2c_data_o[3].DB_MAX_OUTPUT_PORT_TYPE
mpr121_data_out[4] <= r_i2c_data_o[4].DB_MAX_OUTPUT_PORT_TYPE
mpr121_data_out[5] <= r_i2c_data_o[5].DB_MAX_OUTPUT_PORT_TYPE
mpr121_data_out[6] <= r_i2c_data_o[6].DB_MAX_OUTPUT_PORT_TYPE
mpr121_data_out[7] <= r_i2c_data_o[7].DB_MAX_OUTPUT_PORT_TYPE
mpr121_busy <= r_mpr121_busy.DB_MAX_OUTPUT_PORT_TYPE
mpr121_fail <= <GND>
i2c_wb_ack <= i2c_master:Ui2c.data_out_valid
error_code[0] <= r_error_code[0].DB_MAX_OUTPUT_PORT_TYPE
error_code[1] <= r_error_code[1].DB_MAX_OUTPUT_PORT_TYPE
error_code[2] <= r_error_code[2].DB_MAX_OUTPUT_PORT_TYPE
error_code[3] <= r_error_code[3].DB_MAX_OUTPUT_PORT_TYPE
error_code[4] <= r_error_code[4].DB_MAX_OUTPUT_PORT_TYPE
error_code[5] <= r_error_code[5].DB_MAX_OUTPUT_PORT_TYPE
error_code[6] <= r_error_code[6].DB_MAX_OUTPUT_PORT_TYPE
error_code[7] <= r_error_code[7].DB_MAX_OUTPUT_PORT_TYPE
test_dout[0] <= i2c_master:Ui2c.data_out
test_dout[1] <= i2c_master:Ui2c.data_out
test_dout[2] <= i2c_master:Ui2c.data_out
test_dout[3] <= i2c_master:Ui2c.data_out
test_dout[4] <= i2c_master:Ui2c.data_out
test_dout[5] <= i2c_master:Ui2c.data_out
test_dout[6] <= i2c_master:Ui2c.data_out
test_dout[7] <= i2c_master:Ui2c.data_out
i2c_scl <> i2c_scl
i2c_sda <> i2c_sda


|khu_sensor|MPR121_controller:u_mpr121|i2c_master:Ui2c
clk => last_sda_i_reg.CLK
clk => sda_i_reg.CLK
clk => scl_i_reg.CLK
clk => data_out_last_reg.CLK
clk => data_out_reg[0].CLK
clk => data_out_reg[1].CLK
clk => data_out_reg[2].CLK
clk => data_out_reg[3].CLK
clk => data_out_reg[4].CLK
clk => data_out_reg[5].CLK
clk => data_out_reg[6].CLK
clk => data_out_reg[7].CLK
clk => bit_count_reg[0].CLK
clk => bit_count_reg[1].CLK
clk => bit_count_reg[2].CLK
clk => bit_count_reg[3].CLK
clk => mode_stop_reg.CLK
clk => mode_write_multiple_reg.CLK
clk => mode_read_reg.CLK
clk => last_reg.CLK
clk => data_reg[0].CLK
clk => data_reg[1].CLK
clk => data_reg[2].CLK
clk => data_reg[3].CLK
clk => data_reg[4].CLK
clk => data_reg[5].CLK
clk => data_reg[6].CLK
clk => data_reg[7].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => phy_rx_data_reg.CLK
clk => missed_ack_reg.CLK
clk => bus_control_reg.CLK
clk => bus_active_reg.CLK
clk => busy_reg.CLK
clk => sda_o_reg.CLK
clk => scl_o_reg.CLK
clk => data_out_valid_reg.CLK
clk => data_in_ready_reg.CLK
clk => cmd_ready_reg.CLK
clk => delay_sda_reg.CLK
clk => delay_scl_reg.CLK
clk => delay_reg[0].CLK
clk => delay_reg[1].CLK
clk => delay_reg[2].CLK
clk => delay_reg[3].CLK
clk => delay_reg[4].CLK
clk => delay_reg[5].CLK
clk => delay_reg[6].CLK
clk => delay_reg[7].CLK
clk => delay_reg[8].CLK
clk => delay_reg[9].CLK
clk => delay_reg[10].CLK
clk => delay_reg[11].CLK
clk => delay_reg[12].CLK
clk => delay_reg[13].CLK
clk => delay_reg[14].CLK
clk => delay_reg[15].CLK
clk => delay_reg[16].CLK
clk => phy_state_reg~1.DATAIN
clk => state_reg~1.DATAIN
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => phy_state_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_reg.OUTPUTSELECT
rst => delay_scl_reg.OUTPUTSELECT
rst => delay_sda_reg.OUTPUTSELECT
rst => cmd_ready_reg.OUTPUTSELECT
rst => data_in_ready_reg.OUTPUTSELECT
rst => data_out_valid_reg.OUTPUTSELECT
rst => scl_o_reg.OUTPUTSELECT
rst => sda_o_reg.OUTPUTSELECT
rst => busy_reg.OUTPUTSELECT
rst => bus_active_reg.OUTPUTSELECT
rst => bus_control_reg.OUTPUTSELECT
rst => missed_ack_reg.OUTPUTSELECT
cmd_address[0] => addr_next.DATAB
cmd_address[0] => Equal0.IN6
cmd_address[1] => addr_next.DATAB
cmd_address[1] => Equal0.IN5
cmd_address[2] => addr_next.DATAB
cmd_address[2] => Equal0.IN4
cmd_address[3] => addr_next.DATAB
cmd_address[3] => Equal0.IN3
cmd_address[4] => addr_next.DATAB
cmd_address[4] => Equal0.IN2
cmd_address[5] => addr_next.DATAB
cmd_address[5] => Equal0.IN1
cmd_address[6] => addr_next.DATAB
cmd_address[6] => Equal0.IN0
cmd_start => always0.IN1
cmd_read => always0.IN1
cmd_read => mode_read_next.DATAB
cmd_read => always0.IN1
cmd_read => always0.IN0
cmd_write => always0.IN0
cmd_write => always0.IN1
cmd_write => always0.IN1
cmd_write_multiple => always0.IN1
cmd_write_multiple => mode_write_multiple_next.DATAB
cmd_write_multiple => always0.IN1
cmd_stop => mode_stop_next.DATAB
cmd_stop => always0.IN1
cmd_valid => always0.IN1
cmd_valid => always0.IN1
cmd_ready <= cmd_ready_reg.DB_MAX_OUTPUT_PORT_TYPE
data_in[0] => data_next.DATAB
data_in[1] => data_next.DATAB
data_in[2] => data_next.DATAB
data_in[3] => data_next.DATAB
data_in[4] => data_next.DATAB
data_in[5] => data_next.DATAB
data_in[6] => data_next.DATAB
data_in[7] => data_next.DATAB
data_in_valid => always0.IN1
data_in_ready <= data_in_ready_reg.DB_MAX_OUTPUT_PORT_TYPE
data_in_last => last_next.DATAB
data_out[0] <= data_out_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out_reg[7].DB_MAX_OUTPUT_PORT_TYPE
data_out_valid <= data_out_valid_reg.DB_MAX_OUTPUT_PORT_TYPE
data_out_ready => data_out_valid_next.IN1
data_out_last <= data_out_last_reg.DB_MAX_OUTPUT_PORT_TYPE
scl_i => scl_i_reg.DATAIN
scl_o <= scl_o_reg.DB_MAX_OUTPUT_PORT_TYPE
scl_t <= scl_o_reg.DB_MAX_OUTPUT_PORT_TYPE
sda_i => sda_i_reg.DATAIN
sda_o <= sda_o_reg.DB_MAX_OUTPUT_PORT_TYPE
sda_t <= sda_o_reg.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy_reg.DB_MAX_OUTPUT_PORT_TYPE
bus_control <= bus_control_reg.DB_MAX_OUTPUT_PORT_TYPE
bus_active <= bus_active_reg.DB_MAX_OUTPUT_PORT_TYPE
missed_ack <= missed_ack_reg.DB_MAX_OUTPUT_PORT_TYPE
prescale[0] => delay_next.DATAB
prescale[0] => delay_next.DATAB
prescale[0] => delay_next.DATAB
prescale[0] => delay_next.DATAB
prescale[0] => delay_next.DATAB
prescale[0] => Selector55.IN5
prescale[0] => Selector56.IN5
prescale[1] => delay_next.DATAB
prescale[1] => delay_next.DATAB
prescale[1] => delay_next.DATAB
prescale[1] => delay_next.DATAB
prescale[1] => delay_next.DATAB
prescale[1] => Selector54.IN5
prescale[1] => Selector55.IN4
prescale[2] => delay_next.DATAB
prescale[2] => delay_next.DATAB
prescale[2] => delay_next.DATAB
prescale[2] => delay_next.DATAB
prescale[2] => delay_next.DATAB
prescale[2] => Selector53.IN5
prescale[2] => Selector54.IN4
prescale[3] => delay_next.DATAB
prescale[3] => delay_next.DATAB
prescale[3] => delay_next.DATAB
prescale[3] => delay_next.DATAB
prescale[3] => delay_next.DATAB
prescale[3] => Selector52.IN5
prescale[3] => Selector53.IN4
prescale[4] => delay_next.DATAB
prescale[4] => delay_next.DATAB
prescale[4] => delay_next.DATAB
prescale[4] => delay_next.DATAB
prescale[4] => delay_next.DATAB
prescale[4] => Selector51.IN5
prescale[4] => Selector52.IN4
prescale[5] => delay_next.DATAB
prescale[5] => delay_next.DATAB
prescale[5] => delay_next.DATAB
prescale[5] => delay_next.DATAB
prescale[5] => delay_next.DATAB
prescale[5] => Selector50.IN5
prescale[5] => Selector51.IN4
prescale[6] => delay_next.DATAB
prescale[6] => delay_next.DATAB
prescale[6] => delay_next.DATAB
prescale[6] => delay_next.DATAB
prescale[6] => delay_next.DATAB
prescale[6] => Selector49.IN5
prescale[6] => Selector50.IN4
prescale[7] => delay_next.DATAB
prescale[7] => delay_next.DATAB
prescale[7] => delay_next.DATAB
prescale[7] => delay_next.DATAB
prescale[7] => delay_next.DATAB
prescale[7] => Selector48.IN5
prescale[7] => Selector49.IN4
prescale[8] => delay_next.DATAB
prescale[8] => delay_next.DATAB
prescale[8] => delay_next.DATAB
prescale[8] => delay_next.DATAB
prescale[8] => delay_next.DATAB
prescale[8] => Selector47.IN5
prescale[8] => Selector48.IN4
prescale[9] => delay_next.DATAB
prescale[9] => delay_next.DATAB
prescale[9] => delay_next.DATAB
prescale[9] => delay_next.DATAB
prescale[9] => delay_next.DATAB
prescale[9] => Selector46.IN5
prescale[9] => Selector47.IN4
prescale[10] => delay_next.DATAB
prescale[10] => delay_next.DATAB
prescale[10] => delay_next.DATAB
prescale[10] => delay_next.DATAB
prescale[10] => delay_next.DATAB
prescale[10] => Selector45.IN5
prescale[10] => Selector46.IN4
prescale[11] => delay_next.DATAB
prescale[11] => delay_next.DATAB
prescale[11] => delay_next.DATAB
prescale[11] => delay_next.DATAB
prescale[11] => delay_next.DATAB
prescale[11] => Selector44.IN5
prescale[11] => Selector45.IN4
prescale[12] => delay_next.DATAB
prescale[12] => delay_next.DATAB
prescale[12] => delay_next.DATAB
prescale[12] => delay_next.DATAB
prescale[12] => delay_next.DATAB
prescale[12] => Selector43.IN5
prescale[12] => Selector44.IN4
prescale[13] => delay_next.DATAB
prescale[13] => delay_next.DATAB
prescale[13] => delay_next.DATAB
prescale[13] => delay_next.DATAB
prescale[13] => delay_next.DATAB
prescale[13] => Selector42.IN5
prescale[13] => Selector43.IN4
prescale[14] => delay_next.DATAB
prescale[14] => delay_next.DATAB
prescale[14] => delay_next.DATAB
prescale[14] => delay_next.DATAB
prescale[14] => delay_next.DATAB
prescale[14] => Selector41.IN5
prescale[14] => Selector42.IN4
prescale[15] => delay_next.DATAB
prescale[15] => delay_next.DATAB
prescale[15] => delay_next.DATAB
prescale[15] => delay_next.DATAB
prescale[15] => delay_next.DATAB
prescale[15] => Selector40.IN5
prescale[15] => Selector41.IN4
stop_on_idle => always0.IN1


|khu_sensor|ADS1292_controller:U_ads1292
clk => clk.IN1
rstn => rstn.IN1
cmd_sys => r_mode_system_control.IN0
cmd_sys => r_mode_read_reg.IN0
cmd_sys => r_mode_read_data.IN0
cmd_data_read => r_mode_read_reg.IN1
cmd_data_read => r_mode_read_data.IN1
cmd_data_read => r_mode_system_control.IN1
cmd_data_read => r_mode_write_reg.IN1
cmd_reg => r_mode_read_reg.IN1
cmd_reg => r_mode_system_control.IN1
cmd_reg => r_mode_read_data.IN1
sys_state[0] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
sys_state[1] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
sys_state[2] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
sys_state[3] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
sys_state[4] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
sys_state[5] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
sys_state[6] <= <GND>
sys_state[7] <= <GND>
ads_reg_addr[0] => r_ads_command.DATAB
ads_reg_addr[0] => Selector115.IN8
ads_reg_addr[1] => r_ads_command.DATAB
ads_reg_addr[1] => Selector114.IN8
ads_reg_addr[2] => r_ads_command.DATAB
ads_reg_addr[2] => Selector113.IN8
ads_reg_addr[3] => r_ads_command.DATAB
ads_reg_addr[3] => Selector112.IN8
ads_reg_addr[4] => r_ads_command.DATAB
ads_reg_addr[4] => Selector111.IN8
ads_reg_addr[5] => r_ads_command.DATAB
ads_reg_addr[6] => r_ads_command.DATAB
ads_reg_addr[7] => r_ads_command.DATAB
ads_data_in[0] => r_number_read.DATAB
ads_data_in[0] => r_number_read.DATAB
ads_data_in[0] => r_spi_tx_data.DATAA
ads_data_in[1] => r_number_read.DATAB
ads_data_in[1] => r_number_read.DATAB
ads_data_in[1] => r_spi_tx_data.DATAA
ads_data_in[2] => r_number_read.DATAB
ads_data_in[2] => r_number_read.DATAB
ads_data_in[2] => r_spi_tx_data.DATAA
ads_data_in[3] => r_number_read.DATAB
ads_data_in[3] => r_number_read.DATAB
ads_data_in[3] => r_spi_tx_data.DATAA
ads_data_in[4] => r_number_read.DATAB
ads_data_in[4] => r_number_read.DATAB
ads_data_in[4] => r_spi_tx_data.DATAA
ads_data_in[5] => r_number_read.DATAB
ads_data_in[5] => r_number_read.DATAB
ads_data_in[5] => r_spi_tx_data.DATAA
ads_data_in[6] => r_number_read.DATAB
ads_data_in[6] => r_number_read.DATAB
ads_data_in[6] => r_spi_tx_data.DATAA
ads_data_in[7] => r_number_read.DATAB
ads_data_in[7] => r_number_read.DATAB
ads_data_in[7] => r_spi_tx_data.DATAA
ads_data_out[0] <= r_spi_rx_data[0].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[1] <= r_spi_rx_data[1].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[2] <= r_spi_rx_data[2].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[3] <= r_spi_rx_data[3].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[4] <= r_spi_rx_data[4].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[5] <= r_spi_rx_data[5].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[6] <= r_spi_rx_data[6].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[7] <= r_spi_rx_data[7].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[8] <= r_spi_rx_data[8].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[9] <= r_spi_rx_data[9].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[10] <= r_spi_rx_data[10].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[11] <= r_spi_rx_data[11].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[12] <= r_spi_rx_data[12].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[13] <= r_spi_rx_data[13].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[14] <= r_spi_rx_data[14].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[15] <= r_spi_rx_data[15].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[16] <= r_spi_rx_data[16].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[17] <= r_spi_rx_data[17].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[18] <= r_spi_rx_data[18].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[19] <= r_spi_rx_data[19].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[20] <= r_spi_rx_data[20].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[21] <= r_spi_rx_data[21].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[22] <= r_spi_rx_data[22].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[23] <= r_spi_rx_data[23].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[24] <= r_spi_rx_data[24].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[25] <= r_spi_rx_data[25].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[26] <= r_spi_rx_data[26].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[27] <= r_spi_rx_data[27].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[28] <= r_spi_rx_data[28].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[29] <= r_spi_rx_data[29].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[30] <= r_spi_rx_data[30].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[31] <= r_spi_rx_data[31].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[32] <= r_spi_rx_data[32].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[33] <= r_spi_rx_data[33].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[34] <= r_spi_rx_data[34].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[35] <= r_spi_rx_data[35].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[36] <= r_spi_rx_data[36].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[37] <= r_spi_rx_data[37].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[38] <= r_spi_rx_data[38].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[39] <= r_spi_rx_data[39].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[40] <= r_spi_rx_data[40].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[41] <= r_spi_rx_data[41].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[42] <= r_spi_rx_data[42].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[43] <= r_spi_rx_data[43].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[44] <= r_spi_rx_data[44].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[45] <= r_spi_rx_data[45].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[46] <= r_spi_rx_data[46].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[47] <= r_spi_rx_data[47].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[48] <= r_spi_rx_data[48].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[49] <= r_spi_rx_data[49].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[50] <= r_spi_rx_data[50].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[51] <= r_spi_rx_data[51].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[52] <= r_spi_rx_data[52].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[53] <= r_spi_rx_data[53].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[54] <= r_spi_rx_data[54].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[55] <= r_spi_rx_data[55].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[56] <= r_spi_rx_data[56].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[57] <= r_spi_rx_data[57].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[58] <= r_spi_rx_data[58].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[59] <= r_spi_rx_data[59].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[60] <= r_spi_rx_data[60].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[61] <= r_spi_rx_data[61].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[62] <= r_spi_rx_data[62].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[63] <= r_spi_rx_data[63].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[64] <= r_spi_rx_data[64].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[65] <= r_spi_rx_data[65].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[66] <= r_spi_rx_data[66].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[67] <= r_spi_rx_data[67].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[68] <= r_spi_rx_data[68].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[69] <= r_spi_rx_data[69].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[70] <= r_spi_rx_data[70].DB_MAX_OUTPUT_PORT_TYPE
ads_data_out[71] <= r_spi_rx_data[71].DB_MAX_OUTPUT_PORT_TYPE
ads_busy <= r_ads_busy.DB_MAX_OUTPUT_PORT_TYPE
ads_fail <= <GND>
ads_rdatac_ready <= r_ads_rdatac_ready.DB_MAX_OUTPUT_PORT_TYPE
ads_csn <= r_ads_csn.DB_MAX_OUTPUT_PORT_TYPE
ads_start <= r_ads_start.DB_MAX_OUTPUT_PORT_TYPE
ads_drdy => always0.IN0
ads_tx_done <= spi_master:Uspi.tx_ready
ads_rx_done <= spi_master:Uspi.dout_valid
ads_reset <= r_ads_reset.DB_MAX_OUTPUT_PORT_TYPE
spi_clk <= spi_master:Uspi.sclk
spi_miso => spi_miso.IN1
spi_mosi <= spi_master:Uspi.mosi


|khu_sensor|ADS1292_controller:U_ads1292|spi_master:Uspi
clk => sclk~reg0.CLK
clk => r_RX_Bit_Count[0].CLK
clk => r_RX_Bit_Count[1].CLK
clk => r_RX_Bit_Count[2].CLK
clk => r_RX_Bit_Count[3].CLK
clk => r_RX_Bit_Count[4].CLK
clk => r_RX_Bit_Count[5].CLK
clk => r_RX_Bit_Count[6].CLK
clk => r_RX_Bit_Count[7].CLK
clk => dout_valid~reg0.CLK
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => r_TX_Bit_Count[0].CLK
clk => r_TX_Bit_Count[1].CLK
clk => r_TX_Bit_Count[2].CLK
clk => r_TX_Bit_Count[3].CLK
clk => r_TX_Bit_Count[4].CLK
clk => r_TX_Bit_Count[5].CLK
clk => r_TX_Bit_Count[6].CLK
clk => r_TX_Bit_Count[7].CLK
clk => mosi~reg0.CLK
clk => r_din_valid.CLK
clk => r_din[0].CLK
clk => r_din[1].CLK
clk => r_din[2].CLK
clk => r_din[3].CLK
clk => r_din[4].CLK
clk => r_din[5].CLK
clk => r_din[6].CLK
clk => r_din[7].CLK
clk => r_sclk_count[0].CLK
clk => r_sclk_count[1].CLK
clk => r_sclk_count[2].CLK
clk => r_sclk_count[3].CLK
clk => r_sclk_count[4].CLK
clk => r_sclk_count[5].CLK
clk => r_sclk_count[6].CLK
clk => r_sclk_count[7].CLK
clk => r_sclk.CLK
clk => r_Trailing_Edge.CLK
clk => r_sclk_edges[0].CLK
clk => r_sclk_edges[1].CLK
clk => r_sclk_edges[2].CLK
clk => r_sclk_edges[3].CLK
clk => r_sclk_edges[4].CLK
clk => r_sclk_edges[5].CLK
clk => r_sclk_edges[6].CLK
clk => r_sclk_edges[7].CLK
clk => tx_ready~reg0.CLK
rstn => r_sclk_count[0].ACLR
rstn => r_sclk_count[1].ACLR
rstn => r_sclk_count[2].ACLR
rstn => r_sclk_count[3].ACLR
rstn => r_sclk_count[4].ACLR
rstn => r_sclk_count[5].ACLR
rstn => r_sclk_count[6].ACLR
rstn => r_sclk_count[7].ACLR
rstn => r_sclk.ALOAD
rstn => r_Trailing_Edge.ACLR
rstn => r_sclk_edges[0].ACLR
rstn => r_sclk_edges[1].ACLR
rstn => r_sclk_edges[2].ACLR
rstn => r_sclk_edges[3].ACLR
rstn => r_sclk_edges[4].ACLR
rstn => r_sclk_edges[5].ACLR
rstn => r_sclk_edges[6].ACLR
rstn => r_sclk_edges[7].ACLR
rstn => tx_ready~reg0.ACLR
rstn => r_RX_Bit_Count[0].PRESET
rstn => r_RX_Bit_Count[1].PRESET
rstn => r_RX_Bit_Count[2].PRESET
rstn => r_RX_Bit_Count[3].ACLR
rstn => r_RX_Bit_Count[4].ACLR
rstn => r_RX_Bit_Count[5].ACLR
rstn => r_RX_Bit_Count[6].ACLR
rstn => r_RX_Bit_Count[7].ACLR
rstn => dout_valid~reg0.ACLR
rstn => dout[0]~reg0.ACLR
rstn => dout[1]~reg0.ACLR
rstn => dout[2]~reg0.ACLR
rstn => dout[3]~reg0.ACLR
rstn => dout[4]~reg0.ACLR
rstn => dout[5]~reg0.ACLR
rstn => dout[6]~reg0.ACLR
rstn => dout[7]~reg0.ACLR
rstn => sclk~reg0.ALOAD
rstn => r_TX_Bit_Count[0].PRESET
rstn => r_TX_Bit_Count[1].PRESET
rstn => r_TX_Bit_Count[2].PRESET
rstn => r_TX_Bit_Count[3].ACLR
rstn => r_TX_Bit_Count[4].ACLR
rstn => r_TX_Bit_Count[5].ACLR
rstn => r_TX_Bit_Count[6].ACLR
rstn => r_TX_Bit_Count[7].ACLR
rstn => mosi~reg0.ACLR
rstn => r_din_valid.ACLR
rstn => r_din[0].ACLR
rstn => r_din[1].ACLR
rstn => r_din[2].ACLR
rstn => r_din[3].ACLR
rstn => r_din[4].ACLR
rstn => r_din[5].ACLR
rstn => r_din[6].ACLR
rstn => r_din[7].ACLR
din[0] => r_din[0].DATAIN
din[1] => r_din[1].DATAIN
din[2] => r_din[2].DATAIN
din[3] => r_din[3].DATAIN
din[4] => r_din[4].DATAIN
din[5] => r_din[5].DATAIN
din[6] => r_din[6].DATAIN
din[7] => r_din[7].DATAIN
din_valid => tx_ready.OUTPUTSELECT
din_valid => r_sclk_edges.OUTPUTSELECT
din_valid => r_sclk_edges.OUTPUTSELECT
din_valid => r_sclk_edges.OUTPUTSELECT
din_valid => r_sclk_edges.OUTPUTSELECT
din_valid => r_sclk_edges.OUTPUTSELECT
din_valid => r_sclk_edges.OUTPUTSELECT
din_valid => r_sclk_edges.OUTPUTSELECT
din_valid => r_sclk_edges.OUTPUTSELECT
din_valid => r_Trailing_Edge.OUTPUTSELECT
din_valid => r_din_valid.DATAIN
din_valid => r_sclk.ENA
din_valid => r_sclk_count[7].ENA
din_valid => r_sclk_count[6].ENA
din_valid => r_sclk_count[5].ENA
din_valid => r_sclk_count[4].ENA
din_valid => r_sclk_count[3].ENA
din_valid => r_sclk_count[2].ENA
din_valid => r_sclk_count[1].ENA
din_valid => r_sclk_count[0].ENA
din_valid => r_din[7].ENA
din_valid => r_din[6].ENA
din_valid => r_din[5].ENA
din_valid => r_din[4].ENA
din_valid => r_din[3].ENA
din_valid => r_din[2].ENA
din_valid => r_din[1].ENA
din_valid => r_din[0].ENA
tx_ready <= tx_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout_valid <= dout_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
sclk <= sclk~reg0.DB_MAX_OUTPUT_PORT_TYPE
miso => dout.DATAB
miso => dout.DATAB
miso => dout.DATAB
miso => dout.DATAB
miso => dout.DATAB
miso => dout.DATAB
miso => dout.DATAB
miso => dout.DATAB
mosi <= mosi~reg0.DB_MAX_OUTPUT_PORT_TYPE


